{
"dart:core" {
; getter/setter deprecated
; getter/setter override
; getter/setter provisional
; getter/setter proxy
; var deprecated
; var override
; var provisional
; var proxy
"Deprecated"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name message
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"message" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"expires" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}}
"Provisional"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"" {:kind :constructor
:parameters [{:name message
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"message" {:kind :field
:getter true
:type {:type "String"
:nullable true
:lib "dart:core"}}}
"pragma"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name options
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"name" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"options" {:kind :field
:getter true
:type {:type "Object"
:nullable true
:lib "dart:core"}}}
"BigInt"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Comparable"
:lib "dart:core"
:type-parameters [{:type "BigInt"
:lib "dart:core"}]}]
"parse" {:kind :method
:static true
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name radix
:kind :named
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"tryParse" {:kind :method
:static true
:return-type {:type "BigInt"
:nullable true
:lib "dart:core"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name radix
:kind :named
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"abs" {:kind :method
:return-type {:type "BigInt"
:lib "dart:core"}}
"unary-" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}}
"+" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"-" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"*" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"/" {:kind :method
:operator true
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"~/" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"%" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"remainder" {:kind :method
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"<<" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name shiftAmount
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
">>" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name shiftAmount
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"&" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"|" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"^" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"~" {:kind :method
:operator true
:return-type {:type "BigInt"
:lib "dart:core"}}
"<" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"<=" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
">" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
">=" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"compareTo" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"pow" {:kind :method
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name exponent
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"modPow" {:kind :method
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name exponent
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}} {:name modulus
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"modInverse" {:kind :method
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name modulus
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"gcd" {:kind :method
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "BigInt"
:lib "dart:core"}}]}
"toUnsigned" {:kind :method
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name width
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"toSigned" {:kind :method
:return-type {:type "BigInt"
:lib "dart:core"}
:parameters [{:name width
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"toInt" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"toDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"toRadixString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name radix
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"from" {:kind :constructor
:parameters [{:name value
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"zero" {:kind :field
:static true
:getter true
:type {:type "BigInt"
:lib "dart:core"}}
"one" {:kind :field
:static true
:getter true
:type {:type "BigInt"
:lib "dart:core"}}
"two" {:kind :field
:static true
:getter true
:type {:type "BigInt"
:lib "dart:core"}}
"bitLength" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"sign" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEven" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isOdd" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNegative" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isValidInt" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"bool"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"&" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"|" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"^" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"fromEnvironment" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name defaultValue
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"hasEnvironment" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
; typedef Comparator
"Comparable"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
"compareTo" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "T"
:is-param true}}]}
"compare" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name a
:kind :positional
:type {:type "Comparable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name b
:kind :positional
:type {:type "Comparable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}}]}
"" {:kind :constructor}}
"DateTime"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Comparable"
:lib "dart:core"
:type-parameters [{:type "DateTime"
:lib "dart:core"}]}]
"parse" {:kind :method
:static true
:return-type {:type "DateTime"
:lib "dart:core"}
:parameters [{:name formattedString
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"tryParse" {:kind :method
:static true
:return-type {:type "DateTime"
:nullable true
:lib "dart:core"}
:parameters [{:name formattedString
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"isBefore" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "DateTime"
:lib "dart:core"}}]}
"isAfter" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "DateTime"
:lib "dart:core"}}]}
"isAtSameMomentAs" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "DateTime"
:lib "dart:core"}}]}
"compareTo" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "DateTime"
:lib "dart:core"}}]}
"toLocal" {:kind :method
:return-type {:type "DateTime"
:lib "dart:core"}}
"toUtc" {:kind :method
:return-type {:type "DateTime"
:lib "dart:core"}}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"toIso8601String" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"add" {:kind :method
:return-type {:type "DateTime"
:lib "dart:core"}
:parameters [{:name duration
:kind :positional
:type {:type "Duration"
:lib "dart:core"}}]}
"subtract" {:kind :method
:return-type {:type "DateTime"
:lib "dart:core"}
:parameters [{:name duration
:kind :positional
:type {:type "Duration"
:lib "dart:core"}}]}
"difference" {:kind :method
:return-type {:type "Duration"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "DateTime"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name year
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name month
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name day
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name hour
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name minute
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name second
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name millisecond
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name microsecond
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"utc" {:kind :constructor
:parameters [{:name year
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name month
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name day
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name hour
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name minute
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name second
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name millisecond
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name microsecond
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"now" {:kind :constructor}
"fromMillisecondsSinceEpoch" {:kind :constructor
:parameters [{:name millisecondsSinceEpoch
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name isUtc
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"fromMicrosecondsSinceEpoch" {:kind :constructor
:parameters [{:name microsecondsSinceEpoch
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name isUtc
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"monday" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"tuesday" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wednesday" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"thursday" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"friday" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"saturday" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"sunday" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"daysPerWeek" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"january" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"february" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"march" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"april" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"may" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"june" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"july" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"august" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"september" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"october" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"november" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"december" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"monthsPerYear" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"isUtc" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"millisecondsSinceEpoch" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"microsecondsSinceEpoch" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"timeZoneName" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"timeZoneOffset" {:kind :field
:getter true
:type {:type "Duration"
:lib "dart:core"}}
"year" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"month" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"day" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"hour" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"minute" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"second" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"millisecond" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"microsecond" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"weekday" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"double"
{:kind :class
:super {:type "num"
:lib "dart:core"}
"remainder" {:kind :method
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"+" {:kind :method
:operator true
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"-" {:kind :method
:operator true
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"*" {:kind :method
:operator true
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"%" {:kind :method
:operator true
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"/" {:kind :method
:operator true
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"~/" {:kind :method
:operator true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"unary-" {:kind :method
:operator true
:return-type {:type "double"
:lib "dart:core"}}
"abs" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"round" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"floor" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"ceil" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"truncate" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"roundToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"floorToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"ceilToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"truncateToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"parse" {:kind :method
:static true
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name onError
:kind :positional
:type {:type "Function"
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}}]}
"tryParse" {:kind :method
:static true
:return-type {:type "double"
:nullable true
:lib "dart:core"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"" {:kind :constructor}
"nan" {:kind :field
:static true
:getter true
:type {:type "double"
:lib "dart:core"}}
"infinity" {:kind :field
:static true
:getter true
:type {:type "double"
:lib "dart:core"}}
"negativeInfinity" {:kind :field
:static true
:getter true
:type {:type "double"
:lib "dart:core"}}
"minPositive" {:kind :field
:static true
:getter true
:type {:type "double"
:lib "dart:core"}}
"maxFinite" {:kind :field
:static true
:getter true
:type {:type "double"
:lib "dart:core"}}
"sign" {:kind :field
:getter true
:type {:type "double"
:lib "dart:core"}}}
"Duration"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Comparable"
:lib "dart:core"
:type-parameters [{:type "Duration"
:lib "dart:core"}]}]
"+" {:kind :method
:operator true
:return-type {:type "Duration"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Duration"
:lib "dart:core"}}]}
"-" {:kind :method
:operator true
:return-type {:type "Duration"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Duration"
:lib "dart:core"}}]}
"*" {:kind :method
:operator true
:return-type {:type "Duration"
:lib "dart:core"}
:parameters [{:name factor
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"~/" {:kind :method
:operator true
:return-type {:type "Duration"
:lib "dart:core"}
:parameters [{:name quotient
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"<" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Duration"
:lib "dart:core"}}]}
">" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Duration"
:lib "dart:core"}}]}
"<=" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Duration"
:lib "dart:core"}}]}
">=" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Duration"
:lib "dart:core"}}]}
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"compareTo" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Duration"
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"abs" {:kind :method
:return-type {:type "Duration"
:lib "dart:core"}}
"unary-" {:kind :method
:operator true
:return-type {:type "Duration"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name days
:kind :named
:type {:type "int"
:lib "dart:core"}} {:name hours
:kind :named
:type {:type "int"
:lib "dart:core"}} {:name minutes
:kind :named
:type {:type "int"
:lib "dart:core"}} {:name seconds
:kind :named
:type {:type "int"
:lib "dart:core"}} {:name milliseconds
:kind :named
:type {:type "int"
:lib "dart:core"}} {:name microseconds
:kind :named
:type {:type "int"
:lib "dart:core"}}]}
"microsecondsPerMillisecond" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"millisecondsPerSecond" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"secondsPerMinute" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"minutesPerHour" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"hoursPerDay" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"microsecondsPerSecond" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"microsecondsPerMinute" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"microsecondsPerHour" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"microsecondsPerDay" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"millisecondsPerMinute" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"millisecondsPerHour" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"millisecondsPerDay" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"secondsPerHour" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"secondsPerDay" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"minutesPerDay" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zero" {:kind :field
:static true
:getter true
:type {:type "Duration"
:lib "dart:core"}}
"inDays" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"inHours" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"inMinutes" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"inSeconds" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"inMilliseconds" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"inMicroseconds" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isNegative" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"Error"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"safeToString" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor}
"stackTrace" {:kind :field
:getter true
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}}
"AssertionError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name message
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"message" {:kind :field
:getter true
:type {:type "Object"
:nullable true
:lib "dart:core"}}}
"TypeError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"" {:kind :constructor}}
"CastError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"" {:kind :constructor}}
"NullThrownError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}}
"ArgumentError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"checkNotNull" {:kind :method
:static true
:return-type {:type "T"
:is-param true}
:parameters [{:name argument
:kind :positional
:type {:type "T"
:nullable true
:is-param true}} {:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]
:type-parameters [{:name "T"}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name message
:kind :positional
:type {:type "dynamic"}}]}
"value" {:kind :constructor
:parameters [{:name value
:kind :positional
:type {:type "dynamic"}} {:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name message
:kind :positional
:type {:type "dynamic"}}]}
"notNull" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"invalidValue" {:kind :field
:getter true
:type {:type "dynamic"}}
"name" {:kind :field
:getter true
:type {:type "String"
:nullable true
:lib "dart:core"}}
"message" {:kind :field
:getter true
:type {:type "dynamic"}}}
"RangeError"
{:kind :class
:super {:type "ArgumentError"
:lib "dart:core"}
"checkValueInInterval" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name minValue
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name maxValue
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"checkValidIndex" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name indexable
:kind :positional
:type {:type "dynamic"}} {:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}} {:name message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"checkValidRange" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name startName
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name endName
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"checkNotNegative" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name message
:kind :positional
:type {:type "dynamic"}}]}
"value" {:kind :constructor
:parameters [{:name value
:kind :positional
:type {:type "num"
:lib "dart:core"}} {:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"range" {:kind :constructor
:parameters [{:name invalidValue
:kind :positional
:type {:type "num"
:lib "dart:core"}} {:name minValue
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}} {:name maxValue
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}} {:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"index" {:kind :constructor
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name indexable
:kind :positional
:type {:type "dynamic"}} {:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"start" {:kind :field
:getter true
:type {:type "num"
:nullable true
:lib "dart:core"}}
"end" {:kind :field
:getter true
:type {:type "num"
:nullable true
:lib "dart:core"}}}
"IndexError"
{:kind :class
:super {:type "ArgumentError"
:lib "dart:core"}
:interfaces [{:type "RangeError"
:lib "dart:core"}]
"" {:kind :constructor
:parameters [{:name invalidValue
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name indexable
:kind :positional
:type {:type "dynamic"}} {:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"indexable" {:kind :field
:getter true
:type {:type "dynamic"}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"start" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"end" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"FallThroughError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}}
"AbstractClassInstantiationError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name className
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}}
"NoSuchMethodError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"withInvocation" {:kind :constructor
:parameters [{:name receiver
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}} {:name invocation
:kind :positional
:type {:type "Invocation"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name receiver
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}} {:name memberName
:kind :positional
:type {:type "Symbol"
:lib "dart:core"}} {:name positionalArguments
:kind :positional
:type {:type "List"
:nullable true
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name namedArguments
:kind :positional
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "Symbol"
:lib "dart:core"} {:type "dynamic"}]}}]}}
"UnsupportedError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name message
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"message" {:kind :field
:getter true
:type {:type "String"
:nullable true
:lib "dart:core"}}}
"UnimplementedError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
:interfaces [{:type "UnsupportedError"
:lib "dart:core"}]
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"message" {:kind :field
:getter true
:type {:type "String"
:nullable true
:lib "dart:core"}}}
"StateError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name message
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"message" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}}
"ConcurrentModificationError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name modifiedObject
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"modifiedObject" {:kind :field
:getter true
:type {:type "Object"
:nullable true
:lib "dart:core"}}}
"OutOfMemoryError"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Error"
:lib "dart:core"}]
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}
"stackTrace" {:kind :field
:getter true
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}}
"StackOverflowError"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Error"
:lib "dart:core"}]
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}
"stackTrace" {:kind :field
:getter true
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}}
"CyclicInitializationError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name variableName
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"variableName" {:kind :field
:getter true
:type {:type "String"
:nullable true
:lib "dart:core"}}}
"Exception"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"" {:kind :constructor
:parameters [{:name message
:kind :positional
:type {:type "dynamic"}}]}}
"FormatException"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Exception"
:lib "dart:core"}]
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name message
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name source
:kind :positional
:type {:type "dynamic"}} {:name offset
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"message" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"source" {:kind :field
:getter true
:type {:type "dynamic"}}
"offset" {:kind :field
:getter true
:type {:type "int"
:nullable true
:lib "dart:core"}}}
"IntegerDivisionByZeroException"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Exception"
:lib "dart:core"}]
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}}
"Expando"
{:kind :class
:type-parameters [{:name "T"
:bound {:type "Object"
:lib "dart:core"}}]
:super {:type "Object"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"[]" {:kind :method
:operator true
:return-type {:type "T"
:nullable true
:is-param true}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"[]=" {:kind :method
:operator true
:return-type {:type "void"}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "T"
:nullable true
:is-param true}}]}
"" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"name" {:kind :field
:getter true
:type {:type "String"
:nullable true
:lib "dart:core"}}}
"Function"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"apply" {:kind :method
:static true
:return-type {:type "dynamic"}
:parameters [{:name function
:kind :positional
:type {:type "Function"
:lib "dart:core"}} {:name positionalArguments
:kind :positional
:type {:type "List"
:nullable true
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name namedArguments
:kind :positional
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "Symbol"
:lib "dart:core"} {:type "dynamic"}]}}]}
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"" {:kind :constructor}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
; function identical []
; function identityHashCode []
"int"
{:kind :class
:super {:type "num"
:lib "dart:core"}
"&" {:kind :method
:operator true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"|" {:kind :method
:operator true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"^" {:kind :method
:operator true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"~" {:kind :method
:operator true
:return-type {:type "int"
:lib "dart:core"}}
"<<" {:kind :method
:operator true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name shiftAmount
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
">>" {:kind :method
:operator true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name shiftAmount
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"modPow" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name exponent
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name modulus
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"modInverse" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name modulus
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"gcd" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"toUnsigned" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name width
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"toSigned" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name width
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"unary-" {:kind :method
:operator true
:return-type {:type "int"
:lib "dart:core"}}
"abs" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"round" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"floor" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"ceil" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"truncate" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"roundToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"floorToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"ceilToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"truncateToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"toRadixString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name radix
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"parse" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name radix
:kind :named
:type {:type "int"
:nullable true
:lib "dart:core"}} {:name onError
:kind :named
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}}]}
"tryParse" {:kind :method
:static true
:return-type {:type "int"
:nullable true
:lib "dart:core"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name radix
:kind :named
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"fromEnvironment" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name defaultValue
:kind :named
:type {:type "int"
:lib "dart:core"}}]}
"isEven" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isOdd" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"bitLength" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"sign" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Invocation"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"" {:kind :constructor}
"method" {:kind :constructor
:parameters [{:name memberName
:kind :positional
:type {:type "Symbol"
:lib "dart:core"}} {:name positionalArguments
:kind :positional
:type {:type "Iterable"
:nullable true
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}} {:name namedArguments
:kind :positional
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "Symbol"
:lib "dart:core"} {:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"genericMethod" {:kind :constructor
:parameters [{:name memberName
:kind :positional
:type {:type "Symbol"
:lib "dart:core"}} {:name typeArguments
:kind :positional
:type {:type "Iterable"
:nullable true
:lib "dart:core"
:type-parameters [{:type "Type"
:lib "dart:core"}]}} {:name positionalArguments
:kind :positional
:type {:type "Iterable"
:nullable true
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}} {:name namedArguments
:kind :positional
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "Symbol"
:lib "dart:core"} {:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"getter" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "Symbol"
:lib "dart:core"}}]}
"setter" {:kind :constructor
:parameters [{:name memberName
:kind :positional
:type {:type "Symbol"
:lib "dart:core"}} {:name argument
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"memberName" {:kind :field
:getter true
:type {:type "Symbol"
:lib "dart:core"}}
"typeArguments" {:kind :field
:getter true
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "Type"
:lib "dart:core"}]}}
"positionalArguments" {:kind :field
:getter true
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}}
"namedArguments" {:kind :field
:getter true
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "Symbol"
:lib "dart:core"} {:type "dynamic"}]}}
"isMethod" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isGetter" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isSetter" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isAccessor" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"Iterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
"castFrom" {:kind :method
:static true
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name source
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}}]
:type-parameters [{:name "S"} {:name "T"}]}
"cast" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"followedBy" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"map" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name e
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"where" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"whereType" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:type-parameters [{:name "T"}]}
"expand" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"reduce" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "E"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"fold" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name initialValue
:kind :positional
:type {:type "T"
:is-param true}} {:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name previousValue
:kind :positional
:type {:type "T"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"every" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"join" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name separator
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"any" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"toList" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"toSet" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"take" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"takeWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"skip" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"skipWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"firstWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"lastWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"singleWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"elementAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}
"generate" {:kind :constructor
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name generator
:kind :positional
:type {:type "Function"
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}}]}
"empty" {:kind :constructor}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"single" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"BidirectionalIterator"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}]
"movePrevious" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor}}
"Iterator"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor}
"current" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"List"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}]
"castFrom" {:kind :method
:static true
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name source
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}}]
:type-parameters [{:name "S"} {:name "T"}]}
"copyRange" {:kind :method
:static true
:return-type {:type "void"}
:parameters [{:name target
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}} {:name at
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name source
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}} {:name start
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]
:type-parameters [{:name "T"}]}
"writeIterable" {:kind :method
:static true
:return-type {:type "void"}
:parameters [{:name target
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}} {:name at
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name source
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}]
:type-parameters [{:name "T"}]}
"cast" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"[]" {:kind :method
:operator true
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"[]=" {:kind :method
:operator true
:return-type {:type "void"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"sort" {:kind :method
:return-type {:type "void"}
:parameters [{:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name a
:kind :positional
:type {:type "E"
:is-param true}} {:name b
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"shuffle" {:kind :method
:return-type {:type "void"}
:parameters [{:name random
:kind :positional
:type {:type "Random"
:nullable true
:lib "dart:math"}}]}
"indexOf" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"indexWhere" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"lastIndexWhere" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name start
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"lastIndexOf" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}} {:name start
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"insert" {:kind :method
:return-type {:type "void"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}
"insertAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"setAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"removeAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"removeLast" {:kind :method
:return-type {:type "E"
:is-param true}}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"retainWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"+" {:kind :method
:operator true
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"sublist" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"getRange" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"setRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name skipCount
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"removeRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fillRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name fillValue
:kind :positional
:type {:type "E"
:nullable true
:is-param true}}]}
"replaceRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name replacement
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"asMap" {:kind :method
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "E"
:is-param true}]}}
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"filled" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name fill
:kind :positional
:type {:type "E"
:is-param true}} {:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"empty" {:kind :constructor
:parameters [{:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"from" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"of" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"generate" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name generator
:kind :positional
:type {:type "Function"
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}} {:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"unmodifiable" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}}]}
"first" {:kind :field
:setter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:setter true
:type {:type "E"
:is-param true}}
"length" {:kind :field
:getter true
:setter true
:type {:type "int"
:lib "dart:core"}}
"reversed" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}}
"Map"
{:kind :class
:type-parameters [{:name "K"} {:name "V"}]
:super {:type "Object"
:lib "dart:core"}
"castFrom" {:kind :method
:static true
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K2"
:is-param true} {:type "V2"
:is-param true}]}
:parameters [{:name source
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}}]
:type-parameters [{:name "K"} {:name "V"} {:name "K2"} {:name "V2"}]}
"cast" {:kind :method
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "RK"
:is-param true} {:type "RV"
:is-param true}]}
:type-parameters [{:name "RK"} {:name "RV"}]}
"containsValue" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"containsKey" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"[]" {:kind :method
:operator true
:return-type {:type "V"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"[]=" {:kind :method
:operator true
:return-type {:type "void"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}
"map" {:kind :method
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K2"
:is-param true} {:type "V2"
:is-param true}]}
:parameters [{:name convert
:kind :positional
:type {:type "Function"
:return-type {:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K2"
:is-param true} {:type "V2"
:is-param true}]}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]
:type-parameters [{:name "K2"} {:name "V2"}]}
"addEntries" {:kind :method
:return-type {:type "void"}
:parameters [{:name newEntries
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}}]}
"update" {:kind :method
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name update
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "V"
:is-param true}}]}} {:name ifAbsent
:kind :named
:type {:type "Function"
:return-type {:type "V"
:is-param true}}}]}
"updateAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name update
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"putIfAbsent" {:kind :method
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name ifAbsent
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}}]}
"remove" {:kind :method
:return-type {:type "V"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"" {:kind :constructor}
"from" {:kind :constructor
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "dynamic"} {:type "dynamic"}]}}]}
"of" {:kind :constructor
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}}]}
"unmodifiable" {:kind :constructor
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "dynamic"} {:type "dynamic"}]}}]}
"identity" {:kind :constructor}
"fromIterable" {:kind :constructor
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name key
:kind :named
:type {:type "Function"
:return-type {:type "K"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "dynamic"}}]}} {:name value
:kind :named
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "dynamic"}}]}}]}
"fromIterables" {:kind :constructor
:parameters [{:name keys
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true}]}} {:name values
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "V"
:is-param true}]}}]}
"fromEntries" {:kind :constructor
:parameters [{:name entries
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}}]}
"entries" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}}
"keys" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true}]}}
"values" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "V"
:is-param true}]}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"MapEntry"
{:kind :class
:type-parameters [{:name "K"} {:name "V"}]
:super {:type "Object"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}
"key" {:kind :field
:getter true
:type {:type "K"
:is-param true}}
"value" {:kind :field
:getter true
:type {:type "V"
:is-param true}}}
"Null"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"num"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Comparable"
:lib "dart:core"
:type-parameters [{:type "num"
:lib "dart:core"}]}]
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"compareTo" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"+" {:kind :method
:operator true
:return-type {:type "num"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"-" {:kind :method
:operator true
:return-type {:type "num"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"*" {:kind :method
:operator true
:return-type {:type "num"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"%" {:kind :method
:operator true
:return-type {:type "num"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"/" {:kind :method
:operator true
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"~/" {:kind :method
:operator true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"unary-" {:kind :method
:operator true
:return-type {:type "num"
:lib "dart:core"}}
"remainder" {:kind :method
:return-type {:type "num"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"<" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"<=" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
">" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
">=" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"abs" {:kind :method
:return-type {:type "num"
:lib "dart:core"}}
"round" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"floor" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"ceil" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"truncate" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"roundToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"floorToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"ceilToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"truncateToDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"clamp" {:kind :method
:return-type {:type "num"
:lib "dart:core"}
:parameters [{:name lowerLimit
:kind :positional
:type {:type "num"
:lib "dart:core"}} {:name upperLimit
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"toInt" {:kind :method
:return-type {:type "int"
:lib "dart:core"}}
"toDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"toStringAsFixed" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name fractionDigits
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"toStringAsExponential" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name fractionDigits
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"toStringAsPrecision" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name precision
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"parse" {:kind :method
:static true
:return-type {:type "num"
:lib "dart:core"}
:parameters [{:name input
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name onError
:kind :positional
:type {:type "Function"
:return-type {:type "num"
:lib "dart:core"}
:parameters [{:name input
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}}]}
"tryParse" {:kind :method
:static true
:return-type {:type "num"
:nullable true
:lib "dart:core"}
:parameters [{:name input
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"" {:kind :constructor}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isNaN" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNegative" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isInfinite" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isFinite" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"sign" {:kind :field
:getter true
:type {:type "num"
:lib "dart:core"}}}
"Object"
{:kind :class
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"noSuchMethod" {:kind :method
:return-type {:type "dynamic"}
:parameters [{:name invocation
:kind :positional
:type {:type "Invocation"
:lib "dart:core"}}]}
"" {:kind :constructor}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"runtimeType" {:kind :field
:getter true
:type {:type "Type"
:lib "dart:core"}}}
"Pattern"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"allMatches" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Match"
:lib "dart:core"}]}
:parameters [{:name string
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"matchAsPrefix" {:kind :method
:return-type {:type "Match"
:nullable true
:lib "dart:core"}
:parameters [{:name string
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"" {:kind :constructor}}
"Match"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"group" {:kind :method
:return-type {:type "String"
:nullable true
:lib "dart:core"}
:parameters [{:name group
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"[]" {:kind :method
:operator true
:return-type {:type "String"
:nullable true
:lib "dart:core"}
:parameters [{:name group
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"groups" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "String"
:nullable true
:lib "dart:core"}]}
:parameters [{:name groupIndices
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"" {:kind :constructor}
"start" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"end" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"groupCount" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"input" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"pattern" {:kind :field
:getter true
:type {:type "Pattern"
:lib "dart:core"}}}
; function print []
"RegExp"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Pattern"
:lib "dart:core"}]
"escape" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name text
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"firstMatch" {:kind :method
:return-type {:type "RegExpMatch"
:nullable true
:lib "dart:core"}
:parameters [{:name input
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"allMatches" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "RegExpMatch"
:lib "dart:core"}]}
:parameters [{:name input
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"hasMatch" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name input
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"stringMatch" {:kind :method
:return-type {:type "String"
:nullable true
:lib "dart:core"}
:parameters [{:name input
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name multiLine
:kind :named
:type {:type "bool"
:lib "dart:core"}} {:name caseSensitive
:kind :named
:type {:type "bool"
:lib "dart:core"}} {:name unicode
:kind :named
:type {:type "bool"
:lib "dart:core"}} {:name dotAll
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"pattern" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"isMultiLine" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isCaseSensitive" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isUnicode" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isDotAll" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"RegExpMatch"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Match"
:lib "dart:core"}]
"namedGroup" {:kind :method
:return-type {:type "String"
:nullable true
:lib "dart:core"}
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"" {:kind :constructor}
"groupNames" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}}}
"Set"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}
"castFrom" {:kind :method
:static true
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name source
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}} {:name newSet
:kind :named
:type {:type "Function"
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}}]
:type-parameters [{:name "S"} {:name "T"}]}
"cast" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"add" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"lookup" {:kind :method
:return-type {:type "E"
:nullable true
:is-param true}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"removeAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"retainAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"retainWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"containsAll" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"intersection" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"union" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"difference" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"toSet" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"" {:kind :constructor}
"identity" {:kind :constructor}
"from" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}}]}
"of" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"unmodifiable" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}}
"Sink"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name data
:kind :positional
:type {:type "T"
:is-param true}}]}
"close" {:kind :method
:return-type {:type "void"}}
"" {:kind :constructor}}
"StackTrace"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}
"fromString" {:kind :constructor
:parameters [{:name stackTraceString
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"empty" {:kind :field
:static true
:getter true
:type {:type "_StringStackTrace"
:lib "dart:core"}}
"current" {:kind :field
:static true
:getter true
:type {:type "StackTrace"
:lib "dart:core"}}}
"Stopwatch"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"start" {:kind :method
:return-type {:type "void"}}
"stop" {:kind :method
:return-type {:type "void"}}
"reset" {:kind :method
:return-type {:type "void"}}
"" {:kind :constructor}
"frequency" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"elapsedTicks" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"elapsed" {:kind :field
:getter true
:type {:type "Duration"
:lib "dart:core"}}
"elapsedMicroseconds" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"elapsedMilliseconds" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isRunning" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"String"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Comparable"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]} {:type "Pattern"
:lib "dart:core"}]
"[]" {:kind :method
:operator true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"codeUnitAt" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"compareTo" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"endsWith" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"startsWith" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name pattern
:kind :positional
:type {:type "Pattern"
:lib "dart:core"}} {:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"indexOf" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name pattern
:kind :positional
:type {:type "Pattern"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"lastIndexOf" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name pattern
:kind :positional
:type {:type "Pattern"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"+" {:kind :method
:operator true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"substring" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"trim" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"trimLeft" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"trimRight" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"*" {:kind :method
:operator true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name times
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"padLeft" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name width
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name padding
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"padRight" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name width
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name padding
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Pattern"
:lib "dart:core"}} {:name startIndex
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"replaceFirst" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name from
:kind :positional
:type {:type "Pattern"
:lib "dart:core"}} {:name to
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name startIndex
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"replaceFirstMapped" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name from
:kind :positional
:type {:type "Pattern"
:lib "dart:core"}} {:name replace
:kind :positional
:type {:type "Function"
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name match
:kind :positional
:type {:type "Match"
:lib "dart:core"}}]}} {:name startIndex
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"replaceAll" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name from
:kind :positional
:type {:type "Pattern"
:lib "dart:core"}} {:name replace
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"replaceAllMapped" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name from
:kind :positional
:type {:type "Pattern"
:lib "dart:core"}} {:name replace
:kind :positional
:type {:type "Function"
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name match
:kind :positional
:type {:type "Match"
:lib "dart:core"}}]}}]}
"replaceRange" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}} {:name replacement
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"split" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}
:parameters [{:name pattern
:kind :positional
:type {:type "Pattern"
:lib "dart:core"}}]}
"splitMapJoin" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name pattern
:kind :positional
:type {:type "Pattern"
:lib "dart:core"}} {:name onMatch
:kind :named
:type {:type "Function"
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "Match"
:lib "dart:core"}}]}} {:name onNonMatch
:kind :named
:type {:type "Function"
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "String"
:lib "dart:core"}}]}}]}
"toLowerCase" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"toUpperCase" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"fromCharCodes" {:kind :constructor
:parameters [{:name charCodes
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"fromCharCode" {:kind :constructor
:parameters [{:name charCode
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromEnvironment" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name defaultValue
:kind :named
:type {:type "String"
:lib "dart:core"}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"codeUnits" {:kind :field
:getter true
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}
"runes" {:kind :field
:getter true
:type {:type "Runes"
:lib "dart:core"}}}
"Runes"
{:kind :class
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}
"" {:kind :constructor
:parameters [{:name string
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"string" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"iterator" {:kind :field
:getter true
:type {:type "RuneIterator"
:lib "dart:core"}}
"last" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"RuneIterator"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "BidirectionalIterator"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]
"reset" {:kind :method
:return-type {:type "void"}
:parameters [{:name rawIndex
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"movePrevious" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name string
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"at" {:kind :constructor
:parameters [{:name string
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"string" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"rawIndex" {:kind :field
:getter true
:setter true
:type {:type "int"
:lib "dart:core"}}
"current" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"currentSize" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"currentAsString" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}}
"StringBuffer"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "StringSink"
:lib "dart:core"}]
"write" {:kind :method
:return-type {:type "void"}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"writeCharCode" {:kind :method
:return-type {:type "void"}
:parameters [{:name charCode
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"writeAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name objects
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name separator
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"writeln" {:kind :method
:return-type {:type "void"}
:parameters [{:name obj
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name content
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"StringSink"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"write" {:kind :method
:return-type {:type "void"}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"writeAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name objects
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name separator
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"writeln" {:kind :method
:return-type {:type "void"}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"writeCharCode" {:kind :method
:return-type {:type "void"}
:parameters [{:name charCode
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"" {:kind :constructor}}
"Symbol"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"unaryMinus" {:kind :field
:static true
:getter true
:type {:type "Symbol"
:lib "dart:core"}}
"empty" {:kind :field
:static true
:getter true
:type {:type "Symbol"
:lib "dart:core"}}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Type"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Uri"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"isScheme" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name scheme
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"toFilePath" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name windows
:kind :named
:type {:type "bool"
:nullable true
:lib "dart:core"}}]}
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"replace" {:kind :method
:return-type {:type "Uri"
:lib "dart:core"}
:parameters [{:name scheme
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name userInfo
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name host
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name port
:kind :named
:type {:type "int"
:nullable true
:lib "dart:core"}} {:name path
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name pathSegments
:kind :named
:type {:type "Iterable"
:nullable true
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}} {:name query
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name queryParameters
:kind :named
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "dynamic"}]}} {:name fragment
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"removeFragment" {:kind :method
:return-type {:type "Uri"
:lib "dart:core"}}
"resolve" {:kind :method
:return-type {:type "Uri"
:lib "dart:core"}
:parameters [{:name reference
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"resolveUri" {:kind :method
:return-type {:type "Uri"
:lib "dart:core"}
:parameters [{:name reference
:kind :positional
:type {:type "Uri"
:lib "dart:core"}}]}
"normalizePath" {:kind :method
:return-type {:type "Uri"
:lib "dart:core"}}
"parse" {:kind :method
:static true
:return-type {:type "Uri"
:lib "dart:core"}
:parameters [{:name uri
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"tryParse" {:kind :method
:static true
:return-type {:type "Uri"
:nullable true
:lib "dart:core"}
:parameters [{:name uri
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"encodeComponent" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name component
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"encodeQueryComponent" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name component
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name encoding
:kind :named
:type {:type "Encoding"
:lib "dart:convert"}}]}
"decodeComponent" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name encodedComponent
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"decodeQueryComponent" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name encodedComponent
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name encoding
:kind :named
:type {:type "Encoding"
:lib "dart:convert"}}]}
"encodeFull" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name uri
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"decodeFull" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name uri
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"splitQueryString" {:kind :method
:static true
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "String"
:lib "dart:core"}]}
:parameters [{:name query
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name encoding
:kind :named
:type {:type "Encoding"
:lib "dart:convert"}}]}
"parseIPv4Address" {:kind :method
:static true
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:parameters [{:name host
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"parseIPv6Address" {:kind :method
:static true
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:parameters [{:name host
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name scheme
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name userInfo
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name host
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name port
:kind :named
:type {:type "int"
:nullable true
:lib "dart:core"}} {:name path
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name pathSegments
:kind :named
:type {:type "Iterable"
:nullable true
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}} {:name query
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name queryParameters
:kind :named
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "dynamic"}]}} {:name fragment
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"http" {:kind :constructor
:parameters [{:name authority
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name unencodedPath
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name queryParameters
:kind :positional
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "dynamic"}]}}]}
"https" {:kind :constructor
:parameters [{:name authority
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name unencodedPath
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name queryParameters
:kind :positional
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "dynamic"}]}}]}
"file" {:kind :constructor
:parameters [{:name path
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name windows
:kind :named
:type {:type "bool"
:nullable true
:lib "dart:core"}}]}
"directory" {:kind :constructor
:parameters [{:name path
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name windows
:kind :named
:type {:type "bool"
:nullable true
:lib "dart:core"}}]}
"dataFromString" {:kind :constructor
:parameters [{:name content
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name mimeType
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name encoding
:kind :named
:type {:type "Encoding"
:nullable true
:lib "dart:convert"}} {:name parameters
:kind :named
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "String"
:lib "dart:core"}]}} {:name base64
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"dataFromBytes" {:kind :constructor
:parameters [{:name bytes
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}} {:name mimeType
:kind :named
:type {:type "String"
:lib "dart:core"}} {:name parameters
:kind :named
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "String"
:lib "dart:core"}]}} {:name percentEncoded
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"base" {:kind :field
:static true
:getter true
:type {:type "Uri"
:lib "dart:core"}}
"scheme" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"authority" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"userInfo" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"host" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"port" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"path" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"query" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"fragment" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"pathSegments" {:kind :field
:getter true
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}}
"queryParameters" {:kind :field
:getter true
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "String"
:lib "dart:core"}]}}
"queryParametersAll" {:kind :field
:getter true
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "List"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}]}}
"isAbsolute" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"hasScheme" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"hasAuthority" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"hasPort" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"hasQuery" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"hasFragment" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"hasEmptyPath" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"hasAbsolutePath" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"origin" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"data" {:kind :field
:getter true
:type {:type "UriData"
:nullable true
:lib "dart:core"}}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"UriData"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"parse" {:kind :method
:static true
:return-type {:type "UriData"
:lib "dart:core"}
:parameters [{:name uri
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"contentAsBytes" {:kind :method
:return-type {:type "Uint8List"
:lib "dart:typed_data"}}
"contentAsString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name encoding
:kind :named
:type {:type "Encoding"
:nullable true
:lib "dart:convert"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"fromString" {:kind :constructor
:parameters [{:name content
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name mimeType
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name encoding
:kind :named
:type {:type "Encoding"
:nullable true
:lib "dart:convert"}} {:name parameters
:kind :named
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "String"
:lib "dart:core"}]}} {:name base64
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"fromBytes" {:kind :constructor
:parameters [{:name bytes
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}} {:name mimeType
:kind :named
:type {:type "String"
:lib "dart:core"}} {:name parameters
:kind :named
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "String"
:lib "dart:core"}]}} {:name percentEncoded
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"fromUri" {:kind :constructor
:parameters [{:name uri
:kind :positional
:type {:type "Uri"
:lib "dart:core"}}]}
"uri" {:kind :field
:getter true
:type {:type "Uri"
:lib "dart:core"}}
"mimeType" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"charset" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"isBase64" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"contentText" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"parameters" {:kind :field
:getter true
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "String"
:lib "dart:core"}]}}}
}
"dart:math" {
; getter/setter e
; getter/setter ln10
; getter/setter ln2
; getter/setter log2e
; getter/setter log10e
; getter/setter pi
; getter/setter sqrt1_2
; getter/setter sqrt2
; function min [T extends num]
; function max [T extends num]
; function atan2 []
; function pow []
; function sin []
; function cos []
; function tan []
; function acos []
; function asin []
; function atan []
; function sqrt []
; function exp []
; function log []
; var e
; var ln10
; var ln2
; var log2e
; var log10e
; var pi
; var sqrt1_2
; var sqrt2
"Point"
{:kind :class
:type-parameters [{:name "T"
:bound {:type "num"
:lib "dart:core"}}]
:super {:type "Object"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"+" {:kind :method
:operator true
:return-type {:type "Point"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Point"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}}]}
"-" {:kind :method
:operator true
:return-type {:type "Point"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Point"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}}]}
"*" {:kind :method
:operator true
:return-type {:type "Point"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name factor
:kind :positional
:type {:type "num"
:lib "dart:core"}}]}
"distanceTo" {:kind :method
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Point"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}}]}
"squaredDistanceTo" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name other
:kind :positional
:type {:type "Point"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}}]}
"" {:kind :constructor
:parameters [{:name x
:kind :positional
:type {:type "T"
:is-param true}} {:name y
:kind :positional
:type {:type "T"
:is-param true}}]}
"x" {:kind :field
:getter true
:type {:type "T"
:is-param true}}
"y" {:kind :field
:getter true
:type {:type "T"
:is-param true}}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"magnitude" {:kind :field
:getter true
:type {:type "double"
:lib "dart:core"}}}
"Random"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"nextInt" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name max
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"nextDouble" {:kind :method
:return-type {:type "double"
:lib "dart:core"}}
"nextBool" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name seed
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"secure" {:kind :constructor}}
"Rectangle"
{:kind :class
:type-parameters [{:name "T"
:bound {:type "num"
:lib "dart:core"}}]
:super {:type "_RectangleBase"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}
"" {:kind :constructor
:parameters [{:name left
:kind :positional
:type {:type "T"
:is-param true}} {:name top
:kind :positional
:type {:type "T"
:is-param true}} {:name width
:kind :positional
:type {:type "T"
:is-param true}} {:name height
:kind :positional
:type {:type "T"
:is-param true}}]}
"fromPoints" {:kind :constructor
:parameters [{:name a
:kind :positional
:type {:type "Point"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}} {:name b
:kind :positional
:type {:type "Point"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}}]}
"left" {:kind :field
:getter true
:type {:type "T"
:is-param true}}
"top" {:kind :field
:getter true
:type {:type "T"
:is-param true}}
"width" {:kind :field
:getter true
:type {:type "T"
:is-param true}}
"height" {:kind :field
:getter true
:type {:type "T"
:is-param true}}}
"MutableRectangle"
{:kind :class
:type-parameters [{:name "T"
:bound {:type "num"
:lib "dart:core"}}]
:super {:type "_RectangleBase"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}
:interfaces [{:type "Rectangle"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}]
"" {:kind :constructor
:parameters [{:name left
:kind :positional
:type {:type "T"
:is-param true}} {:name top
:kind :positional
:type {:type "T"
:is-param true}} {:name width
:kind :positional
:type {:type "T"
:is-param true}} {:name height
:kind :positional
:type {:type "T"
:is-param true}}]}
"fromPoints" {:kind :constructor
:parameters [{:name a
:kind :positional
:type {:type "Point"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}} {:name b
:kind :positional
:type {:type "Point"
:lib "dart:math"
:type-parameters [{:type "T"
:is-param true}]}}]}
"left" {:kind :field
:getter true
:setter true
:type {:type "T"
:is-param true}}
"top" {:kind :field
:getter true
:setter true
:type {:type "T"
:is-param true}}
"width" {:kind :field
:getter true
:setter true
:type {:type "T"
:is-param true}}
"height" {:kind :field
:getter true
:setter true
:type {:type "T"
:is-param true}}}
}
"dart:_internal" {
; getter/setter POWERS_OF_TEN
; getter/setter nullFuture
; function typeAcceptsNull [T]
; function hexDigitValue []
; function parseHexByte []
; function extractTypeArguments [T]
; function checkNotNullable [T extends Object]
; function valueOfNonNullableParamWithDefault [T extends Object]
; var POWERS_OF_TEN
; var nullFuture
"CodeUnits"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "int"
:lib "dart:core"}]}
"[]" {:kind :method
:operator true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name i
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"stringOf" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name u
:kind :positional
:type {:type "CodeUnits"
:lib "dart:_internal"}}]}
"" {:kind :constructor
:parameters [{:name _string
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"ExternalName"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"name" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}}
"SystemHash"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"combine" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name hash
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"finish" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name hash
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"hash2" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name v1
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v2
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"hash3" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name v1
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v2
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v3
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"hash4" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name v1
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v2
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v3
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v4
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"hash5" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name v1
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v2
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v3
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v4
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v5
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"hash6" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name v1
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v2
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v3
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v4
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v5
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v6
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"hash7" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name v1
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v2
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v3
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v4
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v5
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v6
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v7
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"hash8" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name v1
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v2
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v3
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v4
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v5
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v6
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v7
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v8
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"hash9" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name v1
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v2
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v3
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v4
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v5
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v6
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v7
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v8
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v9
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"hash10" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name v1
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v2
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v3
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v4
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v5
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v6
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v7
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v8
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v9
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name v10
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"smear" {:kind :method
:static true
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name x
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"" {:kind :constructor}}
"Since"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"" {:kind :constructor
:parameters [{:name version
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"version" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}}
"NotNullableError"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Error"
:lib "dart:core"}
:interfaces [{:type "TypeError"
:lib "dart:core"}]
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _name
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}}
"HttpStatus"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"" {:kind :constructor}
"continue_" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"switchingProtocols" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"processing" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ok" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"created" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"accepted" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"nonAuthoritativeInformation" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"noContent" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"resetContent" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"partialContent" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"multiStatus" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"alreadyReported" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"imUsed" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"multipleChoices" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"movedPermanently" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"found" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"movedTemporarily" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"seeOther" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"notModified" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"useProxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"temporaryRedirect" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"permanentRedirect" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"badRequest" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"unauthorized" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"paymentRequired" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"forbidden" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"notFound" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"methodNotAllowed" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"notAcceptable" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"proxyAuthenticationRequired" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"requestTimeout" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"conflict" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"gone" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"lengthRequired" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"preconditionFailed" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"requestEntityTooLarge" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"requestUriTooLong" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"unsupportedMediaType" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"requestedRangeNotSatisfiable" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"expectationFailed" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"misdirectedRequest" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"unprocessableEntity" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"locked" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"failedDependency" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"upgradeRequired" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"preconditionRequired" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"tooManyRequests" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"requestHeaderFieldsTooLarge" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"connectionClosedWithoutResponse" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"unavailableForLegalReasons" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"clientClosedRequest" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"internalServerError" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"notImplemented" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"badGateway" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"serviceUnavailable" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"gatewayTimeout" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"httpVersionNotSupported" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"variantAlsoNegotiates" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"insufficientStorage" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"loopDetected" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"notExtended" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"networkAuthenticationRequired" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"networkConnectTimeoutError" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"CONTINUE" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"SWITCHING_PROTOCOLS" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"OK" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"CREATED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ACCEPTED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"NON_AUTHORITATIVE_INFORMATION" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"NO_CONTENT" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"RESET_CONTENT" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"PARTIAL_CONTENT" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"MULTIPLE_CHOICES" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"MOVED_PERMANENTLY" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"FOUND" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"MOVED_TEMPORARILY" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"SEE_OTHER" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"NOT_MODIFIED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"USE_PROXY" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"TEMPORARY_REDIRECT" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"BAD_REQUEST" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"UNAUTHORIZED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"PAYMENT_REQUIRED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"FORBIDDEN" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"NOT_FOUND" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"METHOD_NOT_ALLOWED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"NOT_ACCEPTABLE" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"PROXY_AUTHENTICATION_REQUIRED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"REQUEST_TIMEOUT" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"CONFLICT" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"GONE" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"LENGTH_REQUIRED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"PRECONDITION_FAILED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"REQUEST_ENTITY_TOO_LARGE" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"REQUEST_URI_TOO_LONG" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"UNSUPPORTED_MEDIA_TYPE" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"REQUESTED_RANGE_NOT_SATISFIABLE" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"EXPECTATION_FAILED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"UPGRADE_REQUIRED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"INTERNAL_SERVER_ERROR" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"NOT_IMPLEMENTED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"BAD_GATEWAY" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"SERVICE_UNAVAILABLE" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"GATEWAY_TIMEOUT" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"HTTP_VERSION_NOT_SUPPORTED" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"NETWORK_CONNECT_TIMEOUT_ERROR" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"CastStream"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
"listen" {:kind :method
:return-type {:type "StreamSubscription"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name onData
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name data
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name onError
:kind :named
:type {:type "Function"
:nullable true
:lib "dart:core"}} {:name onDone
:kind :named
:type {:type "Function"
:return-type {:type "void"}}} {:name cancelOnError
:kind :named
:type {:type "bool"
:nullable true
:lib "dart:core"}}]}
"cast" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}}]}
"isBroadcast" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"CastStreamSubscription"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "StreamSubscription"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}]
"cancel" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}}
"onData" {:kind :method
:return-type {:type "void"}
:parameters [{:name handleData
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name data
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"onError" {:kind :method
:return-type {:type "void"}
:parameters [{:name handleError
:kind :positional
:type {:type "Function"
:nullable true
:lib "dart:core"}}]}
"onDone" {:kind :method
:return-type {:type "void"}
:parameters [{:name handleDone
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}
"pause" {:kind :method
:return-type {:type "void"}
:parameters [{:name resumeSignal
:kind :positional
:type {:type "Future"
:nullable true
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}}]}
"resume" {:kind :method
:return-type {:type "void"}}
"asFuture" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name futureValue
:kind :positional
:type {:type "E"
:nullable true
:is-param true}}]
:type-parameters [{:name "E"}]}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "StreamSubscription"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}}]}
"isPaused" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"CastStreamTransformer"
{:kind :class
:type-parameters [{:name "SS"} {:name "ST"} {:name "TS"} {:name "TT"}]
:super {:type "StreamTransformerBase"
:lib "dart:async"
:type-parameters [{:type "TS"
:is-param true} {:type "TT"
:is-param true}]}
"cast" {:kind :method
:return-type {:type "StreamTransformer"
:lib "dart:async"
:type-parameters [{:type "RS"
:is-param true} {:type "RT"
:is-param true}]}
:type-parameters [{:name "RS"} {:name "RT"}]}
"bind" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "TT"
:is-param true}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "TS"
:is-param true}]}}]}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "StreamTransformer"
:lib "dart:async"
:type-parameters [{:type "SS"
:is-param true} {:type "ST"
:is-param true}]}}]}}
"CastConverter"
{:kind :class
:type-parameters [{:name "SS"} {:name "ST"} {:name "TS"} {:name "TT"}]
:super {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "TS"
:is-param true} {:type "TT"
:is-param true}]}
"convert" {:kind :method
:return-type {:type "TT"
:is-param true}
:parameters [{:name input
:kind :positional
:type {:type "TS"
:is-param true}}]}
"bind" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "TT"
:is-param true}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "TS"
:is-param true}]}}]}
"cast" {:kind :method
:return-type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "RS"
:is-param true} {:type "RT"
:is-param true}]}
:type-parameters [{:name "RS"} {:name "RT"}]}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "SS"
:is-param true} {:type "ST"
:is-param true}]}}]}}
"BytesBuilder"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name bytes
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"addByte" {:kind :method
:return-type {:type "void"}
:parameters [{:name byte
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"takeBytes" {:kind :method
:return-type {:type "Uint8List"
:lib "dart:typed_data"}}
"toBytes" {:kind :method
:return-type {:type "Uint8List"
:lib "dart:typed_data"}}
"clear" {:kind :method
:return-type {:type "void"}}
"" {:kind :constructor
:parameters [{:name copy
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"CastIterator"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}]
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}}]}
"current" {:kind :field
:getter true
:type {:type "T"
:is-param true}}}
"CastIterable"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "_CastIterableBase"
:lib "dart:_internal"
:type-parameters [{:type "S"
:is-param true} {:type "T"
:is-param true}]}
"cast" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"" {:kind :constructor
:parameters [{:name source
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}}]}}
"CastList"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "_CastListBase"
:lib "dart:_internal"
:type-parameters [{:type "S"
:is-param true} {:type "T"
:is-param true}]}
"cast" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}}]}}
"CastSet"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "_CastIterableBase"
:lib "dart:_internal"
:type-parameters [{:type "S"
:is-param true} {:type "T"
:is-param true}]}
:interfaces [{:type "Set"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}]
"cast" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"add" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "T"
:is-param true}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"removeAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name objects
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"retainAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name objects
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"retainWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"containsAll" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name objects
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"intersection" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"difference" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"union" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"toSet" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}
"lookup" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}} {:name _emptySet
:kind :positional
:type {:type "Function"
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}}]}}
"CastMap"
{:kind :class
:type-parameters [{:name "SK"} {:name "SV"} {:name "K"} {:name "V"}]
:super {:type "MapBase"
:lib "dart:collection"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}
"cast" {:kind :method
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "RK"
:is-param true} {:type "RV"
:is-param true}]}
:type-parameters [{:name "RK"} {:name "RV"}]}
"containsValue" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"containsKey" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"[]" {:kind :method
:operator true
:return-type {:type "V"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"[]=" {:kind :method
:operator true
:return-type {:type "void"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}
"putIfAbsent" {:kind :method
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name ifAbsent
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}}]}
"remove" {:kind :method
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"update" {:kind :method
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name update
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "V"
:is-param true}}]}} {:name ifAbsent
:kind :named
:type {:type "Function"
:return-type {:type "V"
:is-param true}}}]}
"updateAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name update
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"addEntries" {:kind :method
:return-type {:type "void"}
:parameters [{:name entries
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "SK"
:is-param true} {:type "SV"
:is-param true}]}}]}
"keys" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true}]}}
"values" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "V"
:is-param true}]}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"entries" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}}}
"CastQueue"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "_CastIterableBase"
:lib "dart:_internal"
:type-parameters [{:type "S"
:is-param true} {:type "T"
:is-param true}]}
:interfaces [{:type "Queue"
:lib "dart:collection"
:type-parameters [{:type "T"
:is-param true}]}]
"cast" {:kind :method
:return-type {:type "Queue"
:lib "dart:collection"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"removeFirst" {:kind :method
:return-type {:type "T"
:is-param true}}
"removeLast" {:kind :method
:return-type {:type "T"
:is-param true}}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "T"
:is-param true}}]}
"addFirst" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "T"
:is-param true}}]}
"addLast" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "T"
:is-param true}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"retainWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "Queue"
:lib "dart:collection"
:type-parameters [{:type "S"
:is-param true}]}}]}}
"LateError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"fieldADI" {:kind :constructor
:parameters [{:name fieldName
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"localADI" {:kind :constructor
:parameters [{:name localName
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"fieldNI" {:kind :constructor
:parameters [{:name fieldName
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"localNI" {:kind :constructor
:parameters [{:name localName
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"fieldAI" {:kind :constructor
:parameters [{:name fieldName
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"localAI" {:kind :constructor
:parameters [{:name localName
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}}
"ReachabilityError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}}
"EfficientLengthIterable"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
"" {:kind :constructor}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"ListIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}
"elementAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name i
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"every" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"any" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"firstWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"lastWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"singleWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"join" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name separator
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"where" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"map" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"reduce" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "E"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"fold" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name initialValue
:kind :positional
:type {:type "T"
:is-param true}} {:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name previousValue
:kind :positional
:type {:type "T"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"skip" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"skipWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"take" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"takeWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"toList" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"toSet" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"" {:kind :constructor}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"single" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"SubListIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "ListIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}
"elementAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"skip" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"take" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"toList" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name _iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name _start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name _endOrLength
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"ListIterator"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}]
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"current" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"MappedIterable"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
"elementAt" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}} {:name function
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "S"
:is-param true}}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:type {:type "T"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "T"
:is-param true}}
"single" {:kind :field
:getter true
:type {:type "T"
:is-param true}}}
"EfficientLengthMappedIterable"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "MappedIterable"
:lib "dart:_internal"
:type-parameters [{:type "S"
:is-param true} {:type "T"
:is-param true}]}
:interfaces [{:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "T"
:is-param true}]}]
"" {:kind :constructor
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}} {:name function
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "S"
:is-param true}}]}}]}}
"MappedIterator"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _iterator
:kind :positional
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}} {:name _f
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "S"
:is-param true}}]}}]}
"current" {:kind :field
:getter true
:type {:type "T"
:is-param true}}}
"MappedListIterable"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "ListIterable"
:lib "dart:_internal"
:type-parameters [{:type "T"
:is-param true}]}
"elementAt" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}} {:name _f
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "S"
:is-param true}}]}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"WhereIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"map" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"" {:kind :constructor
:parameters [{:name _iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name _f
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}}
"WhereIterator"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _iterator
:kind :positional
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name _f
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"current" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"ExpandIterable"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
"" {:kind :constructor
:parameters [{:name _iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}} {:name _f
:kind :positional
:type {:type "Function"
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name sourceElement
:kind :positional
:type {:type "S"
:is-param true}}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}}
"ExpandIterator"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}]
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _iterator
:kind :positional
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}} {:name _f
:kind :positional
:type {:type "Function"
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name sourceElement
:kind :positional
:type {:type "S"
:is-param true}}]}}]}
"current" {:kind :field
:getter true
:type {:type "T"
:is-param true}}}
"TakeIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"" {:kind :constructor
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name takeCount
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}}
"EfficientLengthTakeIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "TakeIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}
:interfaces [{:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}]
"" {:kind :constructor
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name takeCount
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"TakeIterator"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _iterator
:kind :positional
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name _remaining
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"current" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"TakeWhileIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"" {:kind :constructor
:parameters [{:name _iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name _f
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}}
"TakeWhileIterator"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _iterator
:kind :positional
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name _f
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"current" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"SkipIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"skip" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}}
"EfficientLengthSkipIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "SkipIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}
:interfaces [{:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}]
"skip" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"SkipIterator"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _iterator
:kind :positional
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name _skipCount
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"current" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"SkipWhileIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"" {:kind :constructor
:parameters [{:name _iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name _f
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}}
"SkipWhileIterator"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _iterator
:kind :positional
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name _f
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"current" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"EmptyIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"elementAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"every" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"any" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"firstWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"lastWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"singleWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"join" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name separator
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"where" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"map" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"reduce" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "E"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"fold" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name initialValue
:kind :positional
:type {:type "T"
:is-param true}} {:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name previousValue
:kind :positional
:type {:type "T"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"skip" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"skipWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"take" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"takeWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"toList" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"toSet" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"" {:kind :constructor}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"single" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"EmptyIterator"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}]
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor}
"current" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"FollowedByIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name _first
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name _second
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"firstEfficient" {:kind :constructor
:parameters [{:name first
:kind :positional
:type {:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}} {:name second
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"EfficientLengthFollowedByIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "FollowedByIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}
:interfaces [{:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}]
"elementAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name first
:kind :positional
:type {:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}} {:name second
:kind :positional
:type {:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}}]}
"first" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"FollowedByIterator"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}]
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name first
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name _nextIterable
:kind :positional
:type {:type "Iterable"
:nullable true
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"current" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"WhereTypeIterable"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}}
"WhereTypeIterator"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}]
"moveNext" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"current" {:kind :field
:getter true
:type {:type "T"
:is-param true}}}
"IterableElementError"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"noElement" {:kind :method
:static true
:return-type {:type "StateError"
:lib "dart:core"}}
"tooMany" {:kind :method
:static true
:return-type {:type "StateError"
:lib "dart:core"}}
"tooFew" {:kind :method
:static true
:return-type {:type "StateError"
:lib "dart:core"}}
"" {:kind :constructor}}
; function makeListFixedLength [T]
; function makeFixedListUnmodifiable [T]
"FixedLengthListMixin"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"insert" {:kind :method
:return-type {:type "void"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"insertAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name at
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"retainWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"removeAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"removeLast" {:kind :method
:return-type {:type "E"
:is-param true}}
"removeRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"replaceRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"" {:kind :constructor}
"length" {:kind :field
:setter true
:type {:type "int"
:lib "dart:core"}}}
"UnmodifiableListMixin"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}]
"[]=" {:kind :method
:operator true
:return-type {:type "void"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"setAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name at
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"insert" {:kind :method
:return-type {:type "void"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}
"insertAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name at
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"retainWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"sort" {:kind :method
:return-type {:type "void"}
:parameters [{:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name a
:kind :positional
:type {:type "E"
:is-param true}} {:name b
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"shuffle" {:kind :method
:return-type {:type "void"}
:parameters [{:name random
:kind :positional
:type {:type "Random"
:nullable true
:lib "dart:math"}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"removeAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"removeLast" {:kind :method
:return-type {:type "E"
:is-param true}}
"setRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name skipCount
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"removeRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"replaceRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"fillRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name fillValue
:kind :positional
:type {:type "E"
:nullable true
:is-param true}}]}
"" {:kind :constructor}
"length" {:kind :field
:setter true
:type {:type "int"
:lib "dart:core"}}
"first" {:kind :field
:setter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:setter true
:type {:type "E"
:is-param true}}}
"FixedLengthListBase"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "ListBase"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}
:mixins [{:type "FixedLengthListMixin"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}]
"" {:kind :constructor}}
"UnmodifiableListBase"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "ListBase"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}
:mixins [{:type "UnmodifiableListMixin"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}]
"" {:kind :constructor}}
"ListMapView"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "UnmodifiableMapBase"
:lib "dart:collection"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "E"
:is-param true}]}
"[]" {:kind :method
:operator true
:return-type {:type "E"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"containsValue" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"containsKey" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name key
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"" {:kind :constructor
:parameters [{:name _values
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"values" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"keys" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"ReversedListIterable"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "ListIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}
"elementAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name _source
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"UnmodifiableListError"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"add" {:kind :method
:static true
:return-type {:type "UnsupportedError"
:lib "dart:core"}}
"change" {:kind :method
:static true
:return-type {:type "UnsupportedError"
:lib "dart:core"}}
"length" {:kind :method
:static true
:return-type {:type "UnsupportedError"
:lib "dart:core"}}
"remove" {:kind :method
:static true
:return-type {:type "UnsupportedError"
:lib "dart:core"}}
"" {:kind :constructor}}
"NonGrowableListError"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"add" {:kind :method
:static true
:return-type {:type "UnsupportedError"
:lib "dart:core"}}
"length" {:kind :method
:static true
:return-type {:type "UnsupportedError"
:lib "dart:core"}}
"remove" {:kind :method
:static true
:return-type {:type "UnsupportedError"
:lib "dart:core"}}
"" {:kind :constructor}}
"LinkedList"
{:kind :class
:type-parameters [{:name "T"
:bound {:type "LinkedListEntry"
:lib "dart:_internal"
:type-parameters [{:type "T"
:is-param true}]}}]
:super {:type "IterableBase"
:lib "dart:collection"
:type-parameters [{:type "T"
:is-param true}]}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name newLast
:kind :positional
:type {:type "T"
:is-param true}}]}
"addFirst" {:kind :method
:return-type {:type "void"}
:parameters [{:name newFirst
:kind :positional
:type {:type "T"
:is-param true}}]}
"remove" {:kind :method
:return-type {:type "void"}
:parameters [{:name node
:kind :positional
:type {:type "T"
:is-param true}}]}
"" {:kind :constructor}
"length" {:kind :field
:getter true
:setter true
:type {:type "int"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:type {:type "T"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "T"
:is-param true}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}}
"LinkedListEntry"
{:kind :class
:type-parameters [{:name "T"
:bound {:type "LinkedListEntry"
:lib "dart:_internal"
:type-parameters [{:type "T"
:is-param true}]}}]
:super {:type "Object"
:lib "dart:core"}
"unlink" {:kind :method
:return-type {:type "void"}}
"" {:kind :constructor}}
; getter/setter printToZone
; getter/setter printToZone
; function printToConsole []
; var printToZone
"Sort"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"sort" {:kind :method
:static true
:return-type {:type "void"}
:parameters [{:name a
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name a
:kind :positional
:type {:type "E"
:is-param true}} {:name b
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "E"}]}
"sortRange" {:kind :method
:static true
:return-type {:type "void"}
:parameters [{:name a
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name from
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name to
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name a
:kind :positional
:type {:type "E"
:is-param true}} {:name b
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "E"}]}
"" {:kind :constructor}}
"Symbol"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Symbol"
:lib "dart:core"}]
"==" {:kind :method
:operator true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"getName" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name symbol
:kind :positional
:type {:type "Symbol"
:lib "dart:_internal"}}]}
"validatePublicSymbol" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"isValidSymbol" {:kind :method
:static true
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"computeUnmangledName" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name symbol
:kind :positional
:type {:type "Symbol"
:lib "dart:_internal"}}]}
"" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"unvalidated" {:kind :constructor
:parameters [{:name _name
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"validated" {:kind :constructor
:parameters [{:name name
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"reservedWordRE" {:kind :field
:static true
:getter true
:type {:type "String"
:lib "dart:core"}}
"publicIdentifierRE" {:kind :field
:static true
:getter true
:type {:type "String"
:lib "dart:core"}}
"identifierRE" {:kind :field
:static true
:getter true
:type {:type "String"
:lib "dart:core"}}
"operatorRE" {:kind :field
:static true
:getter true
:type {:type "String"
:lib "dart:core"}}
"publicSymbolPattern" {:kind :field
:static true
:getter true
:type {:type "RegExp"
:lib "dart:core"}}
"symbolPattern" {:kind :field
:static true
:getter true
:type {:type "RegExp"
:lib "dart:core"}}
"hashCode" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
}
"dart:convert" {
; getter/setter ascii
; var ascii
"AsciiCodec"
{:kind :class
:super {:type "Encoding"
:lib "dart:convert"}
"encode" {:kind :method
:return-type {:type "Uint8List"
:lib "dart:typed_data"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"decode" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name bytes
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}} {:name allowInvalid
:kind :named
:type {:type "bool"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name allowInvalid
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"name" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"encoder" {:kind :field
:getter true
:type {:type "AsciiEncoder"
:lib "dart:convert"}}
"decoder" {:kind :field
:getter true
:type {:type "AsciiDecoder"
:lib "dart:convert"}}}
"AsciiEncoder"
{:kind :class
:super {:type "_UnicodeSubsetEncoder"
:lib "dart:convert"}
"" {:kind :constructor}}
"AsciiDecoder"
{:kind :class
:super {:type "_UnicodeSubsetDecoder"
:lib "dart:convert"}
"startChunkedConversion" {:kind :method
:return-type {:type "ByteConversionSink"
:lib "dart:convert"}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}}]}
"" {:kind :constructor
:parameters [{:name allowInvalid
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}}
; getter/setter base64
; getter/setter base64Url
; function base64Encode []
; function base64UrlEncode []
; function base64Decode []
; var base64
; var base64Url
"Base64Codec"
{:kind :class
:super {:type "Codec"
:lib "dart:convert"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "String"
:lib "dart:core"}]}
"decode" {:kind :method
:return-type {:type "Uint8List"
:lib "dart:typed_data"}
:parameters [{:name encoded
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"normalize" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor}
"urlSafe" {:kind :constructor}
"encoder" {:kind :field
:getter true
:type {:type "Base64Encoder"
:lib "dart:convert"}}
"decoder" {:kind :field
:getter true
:type {:type "Base64Decoder"
:lib "dart:convert"}}}
"Base64Encoder"
{:kind :class
:super {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "String"
:lib "dart:core"}]}
"convert" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name input
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"startChunkedConversion" {:kind :method
:return-type {:type "ByteConversionSink"
:lib "dart:convert"}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}}]}
"" {:kind :constructor}
"urlSafe" {:kind :constructor}}
"Base64Decoder"
{:kind :class
:super {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}
"convert" {:kind :method
:return-type {:type "Uint8List"
:lib "dart:typed_data"}
:parameters [{:name input
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"startChunkedConversion" {:kind :method
:return-type {:type "StringConversionSink"
:lib "dart:convert"}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}}]}
"" {:kind :constructor}}
"ByteConversionSink"
{:kind :class
:super {:type "ChunkedConversionSink"
:lib "dart:convert"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}
"addSlice" {:kind :method
:return-type {:type "void"}
:parameters [{:name chunk
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name isLast
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"" {:kind :constructor}
"withCallback" {:kind :constructor
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name accumulated
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}}]}
"from" {:kind :constructor
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}}]}}
"ByteConversionSinkBase"
{:kind :class
:super {:type "ByteConversionSink"
:lib "dart:convert"}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name chunk
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"close" {:kind :method
:return-type {:type "void"}}
"addSlice" {:kind :method
:return-type {:type "void"}
:parameters [{:name chunk
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name isLast
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"" {:kind :constructor}}
"ChunkedConversionSink"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Sink"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}]
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name chunk
:kind :positional
:type {:type "T"
:is-param true}}]}
"close" {:kind :method
:return-type {:type "void"}}
"" {:kind :constructor}
"withCallback" {:kind :constructor
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name accumulated
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}]}}]}}
"Codec"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "Object"
:lib "dart:core"}
"encode" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name input
:kind :positional
:type {:type "S"
:is-param true}}]}
"decode" {:kind :method
:return-type {:type "S"
:is-param true}
:parameters [{:name encoded
:kind :positional
:type {:type "T"
:is-param true}}]}
"fuse" {:kind :method
:return-type {:type "Codec"
:lib "dart:convert"
:type-parameters [{:type "S"
:is-param true} {:type "R"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Codec"
:lib "dart:convert"
:type-parameters [{:type "T"
:is-param true} {:type "R"
:is-param true}]}}]
:type-parameters [{:name "R"}]}
"" {:kind :constructor}
"encoder" {:kind :field
:getter true
:type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "S"
:is-param true} {:type "T"
:is-param true}]}}
"decoder" {:kind :field
:getter true
:type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "T"
:is-param true} {:type "S"
:is-param true}]}}
"inverted" {:kind :field
:getter true
:type {:type "Codec"
:lib "dart:convert"
:type-parameters [{:type "T"
:is-param true} {:type "S"
:is-param true}]}}}
"Converter"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "StreamTransformerBase"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true} {:type "T"
:is-param true}]}
"castFrom" {:kind :method
:static true
:return-type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "TS"
:is-param true} {:type "TT"
:is-param true}]}
:parameters [{:name source
:kind :positional
:type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "SS"
:is-param true} {:type "ST"
:is-param true}]}}]
:type-parameters [{:name "SS"} {:name "ST"} {:name "TS"} {:name "TT"}]}
"convert" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name input
:kind :positional
:type {:type "S"
:is-param true}}]}
"fuse" {:kind :method
:return-type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "S"
:is-param true} {:type "TT"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "T"
:is-param true} {:type "TT"
:is-param true}]}}]
:type-parameters [{:name "TT"}]}
"startChunkedConversion" {:kind :method
:return-type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}]}
"bind" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}}]}
"cast" {:kind :method
:return-type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "RS"
:is-param true} {:type "RT"
:is-param true}]}
:type-parameters [{:name "RS"} {:name "RT"}]}
"" {:kind :constructor}}
"Encoding"
{:kind :class
:super {:type "Codec"
:lib "dart:convert"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}
"decodeStream" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "String"
:lib "dart:core"}]}
:parameters [{:name byteStream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}}]}
"getByName" {:kind :method
:static true
:return-type {:type "Encoding"
:nullable true
:lib "dart:convert"}
:parameters [{:name name
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor}
"encoder" {:kind :field
:getter true
:type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}}
"decoder" {:kind :field
:getter true
:type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "String"
:lib "dart:core"}]}}
"name" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}}
; getter/setter htmlEscape
; var htmlEscape
"HtmlEscapeMode"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name name
:kind :named
:type {:type "String"
:lib "dart:core"}} {:name escapeLtGt
:kind :named
:type {:type "bool"
:lib "dart:core"}} {:name escapeQuot
:kind :named
:type {:type "bool"
:lib "dart:core"}} {:name escapeApos
:kind :named
:type {:type "bool"
:lib "dart:core"}} {:name escapeSlash
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"escapeLtGt" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"escapeQuot" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"escapeApos" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"escapeSlash" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"unknown" {:kind :field
:static true
:getter true
:type {:type "HtmlEscapeMode"
:lib "dart:convert"}}
"attribute" {:kind :field
:static true
:getter true
:type {:type "HtmlEscapeMode"
:lib "dart:convert"}}
"sqAttribute" {:kind :field
:static true
:getter true
:type {:type "HtmlEscapeMode"
:lib "dart:convert"}}
"element" {:kind :field
:static true
:getter true
:type {:type "HtmlEscapeMode"
:lib "dart:convert"}}}
"HtmlEscape"
{:kind :class
:super {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "String"
:lib "dart:core"}]}
"convert" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name text
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"startChunkedConversion" {:kind :method
:return-type {:type "StringConversionSink"
:lib "dart:convert"}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}}]}
"" {:kind :constructor
:parameters [{:name mode
:kind :positional
:type {:type "HtmlEscapeMode"
:lib "dart:convert"}}]}
"mode" {:kind :field
:getter true
:type {:type "HtmlEscapeMode"
:lib "dart:convert"}}}
; getter/setter json
; function jsonEncode []
; function jsonDecode []
; var json
"JsonUnsupportedObjectError"
{:kind :class
:super {:type "Error"
:lib "dart:core"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name unsupportedObject
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}} {:name cause
:kind :named
:type {:type "Object"
:nullable true
:lib "dart:core"}} {:name partialResult
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"unsupportedObject" {:kind :field
:getter true
:type {:type "Object"
:nullable true
:lib "dart:core"}}
"cause" {:kind :field
:getter true
:type {:type "Object"
:nullable true
:lib "dart:core"}}
"partialResult" {:kind :field
:getter true
:type {:type "String"
:nullable true
:lib "dart:core"}}}
"JsonCyclicError"
{:kind :class
:super {:type "JsonUnsupportedObjectError"
:lib "dart:convert"}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name object
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}}
"JsonCodec"
{:kind :class
:super {:type "Codec"
:lib "dart:convert"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"} {:type "String"
:lib "dart:core"}]}
"decode" {:kind :method
:return-type {:type "dynamic"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name reviver
:kind :named
:type {:type "Function"
:return-type {:type "Object"
:nullable true
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}}]}
"encode" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}} {:name toEncodable
:kind :named
:type {:type "Function"
:return-type {:type "Object"
:nullable true
:lib "dart:core"}
:parameters [{:name object
:kind :positional
:type {:type "dynamic"}}]}}]}
"" {:kind :constructor
:parameters [{:name reviver
:kind :named
:type {:type "Function"
:return-type {:type "Object"
:nullable true
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}} {:name toEncodable
:kind :named
:type {:type "Function"
:return-type {:type "Object"
:nullable true
:lib "dart:core"}
:parameters [{:name object
:kind :positional
:type {:type "dynamic"}}]}}]}
"withReviver" {:kind :constructor
:parameters [{:name reviver
:kind :positional
:type {:type "Function"
:return-type {:type "dynamic"}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}}]}
"encoder" {:kind :field
:getter true
:type {:type "JsonEncoder"
:lib "dart:convert"}}
"decoder" {:kind :field
:getter true
:type {:type "JsonDecoder"
:lib "dart:convert"}}}
"JsonEncoder"
{:kind :class
:super {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"} {:type "String"
:lib "dart:core"}]}
"convert" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"startChunkedConversion" {:kind :method
:return-type {:type "ChunkedConversionSink"
:lib "dart:convert"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}}]}
"bind" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "String"
:lib "dart:core"}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"fuse" {:kind :method
:return-type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"} {:type "T"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "T"
:is-param true}]}}]
:type-parameters [{:name "T"}]}
"" {:kind :constructor
:parameters [{:name toEncodable
:kind :positional
:type {:type "Function"
:return-type {:type "Object"
:nullable true
:lib "dart:core"}
:parameters [{:name object
:kind :positional
:type {:type "dynamic"}}]}}]}
"withIndent" {:kind :constructor
:parameters [{:name indent
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name toEncodable
:kind :positional
:type {:type "Function"
:return-type {:type "Object"
:nullable true
:lib "dart:core"}
:parameters [{:name object
:kind :positional
:type {:type "dynamic"}}]}}]}
"indent" {:kind :field
:getter true
:type {:type "String"
:nullable true
:lib "dart:core"}}}
"JsonUtf8Encoder"
{:kind :class
:super {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"} {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}
"convert" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"startChunkedConversion" {:kind :method
:return-type {:type "ChunkedConversionSink"
:lib "dart:convert"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}}]}
"bind" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"" {:kind :constructor
:parameters [{:name indent
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name toEncodable
:kind :positional
:type {:type "Function"
:return-type {:type "dynamic"}
:parameters [{:name object
:kind :positional
:type {:type "dynamic"}}]}} {:name bufferSize
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"DEFAULT_BUFFER_SIZE" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"JsonDecoder"
{:kind :class
:super {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "Object"
:nullable true
:lib "dart:core"}]}
"convert" {:kind :method
:return-type {:type "dynamic"}
:parameters [{:name input
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"startChunkedConversion" {:kind :method
:return-type {:type "StringConversionSink"
:lib "dart:convert"}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"bind" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "String"
:lib "dart:core"}]}}]}
"" {:kind :constructor
:parameters [{:name reviver
:kind :positional
:type {:type "Function"
:return-type {:type "Object"
:nullable true
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}}]}}
; getter/setter latin1
; var latin1
"Latin1Codec"
{:kind :class
:super {:type "Encoding"
:lib "dart:convert"}
"encode" {:kind :method
:return-type {:type "Uint8List"
:lib "dart:typed_data"}
:parameters [{:name source
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"decode" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name bytes
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}} {:name allowInvalid
:kind :named
:type {:type "bool"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name allowInvalid
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"name" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"encoder" {:kind :field
:getter true
:type {:type "Latin1Encoder"
:lib "dart:convert"}}
"decoder" {:kind :field
:getter true
:type {:type "Latin1Decoder"
:lib "dart:convert"}}}
"Latin1Encoder"
{:kind :class
:super {:type "_UnicodeSubsetEncoder"
:lib "dart:convert"}
"" {:kind :constructor}}
"Latin1Decoder"
{:kind :class
:super {:type "_UnicodeSubsetDecoder"
:lib "dart:convert"}
"startChunkedConversion" {:kind :method
:return-type {:type "ByteConversionSink"
:lib "dart:convert"}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}}]}
"" {:kind :constructor
:parameters [{:name allowInvalid
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}}
"LineSplitter"
{:kind :class
:super {:type "StreamTransformerBase"
:lib "dart:async"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "String"
:lib "dart:core"}]}
"split" {:kind :method
:static true
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}
:parameters [{:name lines
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"convert" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}
:parameters [{:name data
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"startChunkedConversion" {:kind :method
:return-type {:type "StringConversionSink"
:lib "dart:convert"}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}}]}
"bind" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "String"
:lib "dart:core"}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "String"
:lib "dart:core"}]}}]}
"" {:kind :constructor}}
"StringConversionSink"
{:kind :class
:super {:type "ChunkedConversionSink"
:lib "dart:convert"
:type-parameters [{:type "String"
:lib "dart:core"}]}
"addSlice" {:kind :method
:return-type {:type "void"}
:parameters [{:name chunk
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name isLast
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"asUtf8Sink" {:kind :method
:return-type {:type "ByteConversionSink"
:lib "dart:convert"}
:parameters [{:name allowMalformed
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"asStringSink" {:kind :method
:return-type {:type "ClosableStringSink"
:lib "dart:convert"}}
"" {:kind :constructor}
"withCallback" {:kind :constructor
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name accumulated
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}}]}
"from" {:kind :constructor
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}}]}
"fromStringSink" {:kind :constructor
:parameters [{:name sink
:kind :positional
:type {:type "StringSink"
:lib "dart:core"}}]}}
"ClosableStringSink"
{:kind :class
:super {:type "StringSink"
:lib "dart:core"}
"close" {:kind :method
:return-type {:type "void"}}
"fromStringSink" {:kind :constructor
:parameters [{:name sink
:kind :positional
:type {:type "StringSink"
:lib "dart:core"}} {:name onClose
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}}
"StringConversionSinkBase"
{:kind :class
:super {:type "StringConversionSinkMixin"
:lib "dart:convert"}
"" {:kind :constructor}}
"StringConversionSinkMixin"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "StringConversionSink"
:lib "dart:convert"}]
"addSlice" {:kind :method
:return-type {:type "void"}
:parameters [{:name str
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name isLast
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"close" {:kind :method
:return-type {:type "void"}}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name str
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"asUtf8Sink" {:kind :method
:return-type {:type "ByteConversionSink"
:lib "dart:convert"}
:parameters [{:name allowMalformed
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"asStringSink" {:kind :method
:return-type {:type "ClosableStringSink"
:lib "dart:convert"}}
"" {:kind :constructor}}
; getter/setter unicodeReplacementCharacterRune
; getter/setter unicodeBomCharacterRune
; getter/setter utf8
; var unicodeReplacementCharacterRune
; var unicodeBomCharacterRune
; var utf8
"Utf8Codec"
{:kind :class
:super {:type "Encoding"
:lib "dart:convert"}
"decode" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name codeUnits
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}} {:name allowMalformed
:kind :named
:type {:type "bool"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name allowMalformed
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"name" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"encoder" {:kind :field
:getter true
:type {:type "Utf8Encoder"
:lib "dart:convert"}}
"decoder" {:kind :field
:getter true
:type {:type "Utf8Decoder"
:lib "dart:convert"}}}
"Utf8Encoder"
{:kind :class
:super {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}
"convert" {:kind :method
:return-type {:type "Uint8List"
:lib "dart:typed_data"}
:parameters [{:name string
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"startChunkedConversion" {:kind :method
:return-type {:type "StringConversionSink"
:lib "dart:convert"}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}}]}
"bind" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "String"
:lib "dart:core"}]}}]}
"" {:kind :constructor}}
"Utf8Decoder"
{:kind :class
:super {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "String"
:lib "dart:core"}]}
"convert" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name codeUnits
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"startChunkedConversion" {:kind :method
:return-type {:type "ByteConversionSink"
:lib "dart:convert"}
:parameters [{:name sink
:kind :positional
:type {:type "Sink"
:lib "dart:core"
:type-parameters [{:type "String"
:lib "dart:core"}]}}]}
"bind" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "String"
:lib "dart:core"}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}]}}]}
"fuse" {:kind :method
:return-type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "T"
:is-param true}]}
:parameters [{:name next
:kind :positional
:type {:type "Converter"
:lib "dart:convert"
:type-parameters [{:type "String"
:lib "dart:core"} {:type "T"
:is-param true}]}}]
:type-parameters [{:name "T"}]}
"" {:kind :constructor
:parameters [{:name allowMalformed
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}}
}
"dart:typed_data" {
"ByteBuffer"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"asUint8List" {:kind :method
:return-type {:type "Uint8List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asInt8List" {:kind :method
:return-type {:type "Int8List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asUint8ClampedList" {:kind :method
:return-type {:type "Uint8ClampedList"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asUint16List" {:kind :method
:return-type {:type "Uint16List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asInt16List" {:kind :method
:return-type {:type "Int16List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asUint32List" {:kind :method
:return-type {:type "Uint32List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asInt32List" {:kind :method
:return-type {:type "Int32List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asUint64List" {:kind :method
:return-type {:type "Uint64List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asInt64List" {:kind :method
:return-type {:type "Int64List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asInt32x4List" {:kind :method
:return-type {:type "Int32x4List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asFloat32List" {:kind :method
:return-type {:type "Float32List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asFloat64List" {:kind :method
:return-type {:type "Float64List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asFloat32x4List" {:kind :method
:return-type {:type "Float32x4List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asFloat64x2List" {:kind :method
:return-type {:type "Float64x2List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asByteData" {:kind :method
:return-type {:type "ByteData"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor}
"lengthInBytes" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"TypedData"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"" {:kind :constructor}
"elementSizeInBytes" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"offsetInBytes" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"lengthInBytes" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"buffer" {:kind :field
:getter true
:type {:type "ByteBuffer"
:lib "dart:typed_data"}}}
"Endian"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"big" {:kind :field
:static true
:getter true
:type {:type "Endian"
:lib "dart:typed_data"}}
"little" {:kind :field
:static true
:getter true
:type {:type "Endian"
:lib "dart:typed_data"}}
"host" {:kind :field
:static true
:getter true
:type {:type "Endian"
:lib "dart:typed_data"}}}
"ByteData"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "TypedData"
:lib "dart:typed_data"}]
"getInt8" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"setInt8" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"getUint8" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"setUint8" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"getInt16" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setInt16" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getUint16" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setUint16" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getInt32" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setInt32" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getUint32" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setUint32" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getInt64" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setInt64" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getUint64" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setUint64" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getFloat32" {:kind :method
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setFloat32" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "double"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getFloat64" {:kind :method
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setFloat64" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "double"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}}
"Int8List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "_TypedIntList"
:lib "dart:typed_data"}]
"sublist" {:kind :method
:return-type {:type "Int8List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Uint8List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "_TypedIntList"
:lib "dart:typed_data"}]
"+" {:kind :method
:operator true
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:parameters [{:name other
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"sublist" {:kind :method
:return-type {:type "Uint8List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Uint8ClampedList"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "_TypedIntList"
:lib "dart:typed_data"}]
"sublist" {:kind :method
:return-type {:type "Uint8ClampedList"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Int16List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "_TypedIntList"
:lib "dart:typed_data"}]
"sublist" {:kind :method
:return-type {:type "Int16List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Uint16List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "_TypedIntList"
:lib "dart:typed_data"}]
"sublist" {:kind :method
:return-type {:type "Uint16List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Int32List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "_TypedIntList"
:lib "dart:typed_data"}]
"sublist" {:kind :method
:return-type {:type "Int32List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Uint32List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "_TypedIntList"
:lib "dart:typed_data"}]
"sublist" {:kind :method
:return-type {:type "Uint32List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Int64List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "_TypedIntList"
:lib "dart:typed_data"}]
"sublist" {:kind :method
:return-type {:type "Int64List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Uint64List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]} {:type "_TypedIntList"
:lib "dart:typed_data"}]
"sublist" {:kind :method
:return-type {:type "Uint64List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Float32List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "double"
:lib "dart:core"}]} {:type "_TypedFloatList"
:lib "dart:typed_data"}]
"sublist" {:kind :method
:return-type {:type "Float32List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "double"
:lib "dart:core"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Float64List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "double"
:lib "dart:core"}]} {:type "_TypedFloatList"
:lib "dart:typed_data"}]
"sublist" {:kind :method
:return-type {:type "Float64List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "double"
:lib "dart:core"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Float32x4List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "Float32x4"
:lib "dart:typed_data"}]} {:type "TypedData"
:lib "dart:typed_data"}]
"+" {:kind :method
:operator true
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "Float32x4"
:lib "dart:typed_data"}]}
:parameters [{:name other
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "Float32x4"
:lib "dart:typed_data"}]}}]}
"sublist" {:kind :method
:return-type {:type "Float32x4List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "Float32x4"
:lib "dart:typed_data"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Int32x4List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "Int32x4"
:lib "dart:typed_data"}]} {:type "TypedData"
:lib "dart:typed_data"}]
"+" {:kind :method
:operator true
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "Int32x4"
:lib "dart:typed_data"}]}
:parameters [{:name other
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "Int32x4"
:lib "dart:typed_data"}]}}]}
"sublist" {:kind :method
:return-type {:type "Int32x4List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "Int32x4"
:lib "dart:typed_data"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Float64x2List"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "Float64x2"
:lib "dart:typed_data"}]} {:type "TypedData"
:lib "dart:typed_data"}]
"+" {:kind :method
:operator true
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "Float64x2"
:lib "dart:typed_data"}]}
:parameters [{:name other
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "Float64x2"
:lib "dart:typed_data"}]}}]}
"sublist" {:kind :method
:return-type {:type "Float64x2List"
:lib "dart:typed_data"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name length
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fromList" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "Float64x2"
:lib "dart:typed_data"}]}}]}
"view" {:kind :constructor
:parameters [{:name buffer
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}} {:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"sublistView" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "TypedData"
:lib "dart:typed_data"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"bytesPerElement" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Float32x4"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"+" {:kind :method
:operator true
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"unary-" {:kind :method
:operator true
:return-type {:type "Float32x4"
:lib "dart:typed_data"}}
"-" {:kind :method
:operator true
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"*" {:kind :method
:operator true
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"/" {:kind :method
:operator true
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"lessThan" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"lessThanOrEqual" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"greaterThan" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"greaterThanOrEqual" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"equal" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"notEqual" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"scale" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name s
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"abs" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}}
"clamp" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name lowerLimit
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}} {:name upperLimit
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"shuffle" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name mask
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"shuffleMix" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}} {:name mask
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"withX" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name x
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"withY" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name y
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"withZ" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name z
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"withW" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name w
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"min" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"max" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"sqrt" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}}
"reciprocal" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}}
"reciprocalSqrt" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}}
"" {:kind :constructor
:parameters [{:name x
:kind :positional
:type {:type "double"
:lib "dart:core"}} {:name y
:kind :positional
:type {:type "double"
:lib "dart:core"}} {:name z
:kind :positional
:type {:type "double"
:lib "dart:core"}} {:name w
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"splat" {:kind :constructor
:parameters [{:name v
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"zero" {:kind :constructor}
"fromInt32x4Bits" {:kind :constructor
:parameters [{:name x
:kind :positional
:type {:type "Int32x4"
:lib "dart:typed_data"}}]}
"fromFloat64x2" {:kind :constructor
:parameters [{:name v
:kind :positional
:type {:type "Float64x2"
:lib "dart:typed_data"}}]}
"xxxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xywx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xywy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xywz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yywx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yywy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yywz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zywx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zywy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zywz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wywx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wywy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wywz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"x" {:kind :field
:getter true
:type {:type "double"
:lib "dart:core"}}
"y" {:kind :field
:getter true
:type {:type "double"
:lib "dart:core"}}
"z" {:kind :field
:getter true
:type {:type "double"
:lib "dart:core"}}
"w" {:kind :field
:getter true
:type {:type "double"
:lib "dart:core"}}
"signMask" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"Int32x4"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"|" {:kind :method
:operator true
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Int32x4"
:lib "dart:typed_data"}}]}
"&" {:kind :method
:operator true
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Int32x4"
:lib "dart:typed_data"}}]}
"^" {:kind :method
:operator true
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Int32x4"
:lib "dart:typed_data"}}]}
"+" {:kind :method
:operator true
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Int32x4"
:lib "dart:typed_data"}}]}
"-" {:kind :method
:operator true
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Int32x4"
:lib "dart:typed_data"}}]}
"shuffle" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name mask
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"shuffleMix" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Int32x4"
:lib "dart:typed_data"}} {:name mask
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"withX" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name x
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"withY" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name y
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"withZ" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name z
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"withW" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name w
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"withFlagX" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name x
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"withFlagY" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name y
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"withFlagZ" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name z
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"withFlagW" {:kind :method
:return-type {:type "Int32x4"
:lib "dart:typed_data"}
:parameters [{:name w
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"select" {:kind :method
:return-type {:type "Float32x4"
:lib "dart:typed_data"}
:parameters [{:name trueValue
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}} {:name falseValue
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"" {:kind :constructor
:parameters [{:name x
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name y
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name z
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name w
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"bool" {:kind :constructor
:parameters [{:name x
:kind :positional
:type {:type "bool"
:lib "dart:core"}} {:name y
:kind :positional
:type {:type "bool"
:lib "dart:core"}} {:name z
:kind :positional
:type {:type "bool"
:lib "dart:core"}} {:name w
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}
"fromFloat32x4Bits" {:kind :constructor
:parameters [{:name x
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"xxxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xxww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xywx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xywy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xywz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xyww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xzww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"xwww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yxww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yywx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yywy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yywz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yyww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"yzww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"ywww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zxww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zywx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zywy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zywz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zyww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zzww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"zwww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wxww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wywx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wywy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wywz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wyww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wzww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwxx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwxy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwxz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwxw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwyx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwyy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwyz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwyw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwzx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwzy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwzz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwzw" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwwx" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwwy" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwwz" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"wwww" {:kind :field
:static true
:getter true
:type {:type "int"
:lib "dart:core"}}
"x" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"y" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"z" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"w" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"signMask" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"flagX" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"flagY" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"flagZ" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"flagW" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"Float64x2"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"+" {:kind :method
:operator true
:return-type {:type "Float64x2"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float64x2"
:lib "dart:typed_data"}}]}
"unary-" {:kind :method
:operator true
:return-type {:type "Float64x2"
:lib "dart:typed_data"}}
"-" {:kind :method
:operator true
:return-type {:type "Float64x2"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float64x2"
:lib "dart:typed_data"}}]}
"*" {:kind :method
:operator true
:return-type {:type "Float64x2"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float64x2"
:lib "dart:typed_data"}}]}
"/" {:kind :method
:operator true
:return-type {:type "Float64x2"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float64x2"
:lib "dart:typed_data"}}]}
"scale" {:kind :method
:return-type {:type "Float64x2"
:lib "dart:typed_data"}
:parameters [{:name s
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"abs" {:kind :method
:return-type {:type "Float64x2"
:lib "dart:typed_data"}}
"clamp" {:kind :method
:return-type {:type "Float64x2"
:lib "dart:typed_data"}
:parameters [{:name lowerLimit
:kind :positional
:type {:type "Float64x2"
:lib "dart:typed_data"}} {:name upperLimit
:kind :positional
:type {:type "Float64x2"
:lib "dart:typed_data"}}]}
"withX" {:kind :method
:return-type {:type "Float64x2"
:lib "dart:typed_data"}
:parameters [{:name x
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"withY" {:kind :method
:return-type {:type "Float64x2"
:lib "dart:typed_data"}
:parameters [{:name y
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"min" {:kind :method
:return-type {:type "Float64x2"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float64x2"
:lib "dart:typed_data"}}]}
"max" {:kind :method
:return-type {:type "Float64x2"
:lib "dart:typed_data"}
:parameters [{:name other
:kind :positional
:type {:type "Float64x2"
:lib "dart:typed_data"}}]}
"sqrt" {:kind :method
:return-type {:type "Float64x2"
:lib "dart:typed_data"}}
"" {:kind :constructor
:parameters [{:name x
:kind :positional
:type {:type "double"
:lib "dart:core"}} {:name y
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"splat" {:kind :constructor
:parameters [{:name v
:kind :positional
:type {:type "double"
:lib "dart:core"}}]}
"zero" {:kind :constructor}
"fromFloat32x4" {:kind :constructor
:parameters [{:name v
:kind :positional
:type {:type "Float32x4"
:lib "dart:typed_data"}}]}
"x" {:kind :field
:getter true
:type {:type "double"
:lib "dart:core"}}
"y" {:kind :field
:getter true
:type {:type "double"
:lib "dart:core"}}
"signMask" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"UnmodifiableByteBufferView"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "ByteBuffer"
:lib "dart:typed_data"}]
"asUint8List" {:kind :method
:return-type {:type "Uint8List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asInt8List" {:kind :method
:return-type {:type "Int8List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asUint8ClampedList" {:kind :method
:return-type {:type "Uint8ClampedList"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asUint16List" {:kind :method
:return-type {:type "Uint16List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asInt16List" {:kind :method
:return-type {:type "Int16List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asUint32List" {:kind :method
:return-type {:type "Uint32List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asInt32List" {:kind :method
:return-type {:type "Int32List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asUint64List" {:kind :method
:return-type {:type "Uint64List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asInt64List" {:kind :method
:return-type {:type "Int64List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asInt32x4List" {:kind :method
:return-type {:type "Int32x4List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asFloat32List" {:kind :method
:return-type {:type "Float32List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asFloat64List" {:kind :method
:return-type {:type "Float64List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asFloat32x4List" {:kind :method
:return-type {:type "Float32x4List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asFloat64x2List" {:kind :method
:return-type {:type "Float64x2List"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"asByteData" {:kind :method
:return-type {:type "ByteData"
:lib "dart:typed_data"}
:parameters [{:name offsetInBytes
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name length
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "ByteBuffer"
:lib "dart:typed_data"}}]}
"lengthInBytes" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"UnmodifiableByteDataView"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "ByteData"
:lib "dart:typed_data"}]
"getInt8" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"setInt8" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"getUint8" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"setUint8" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"getInt16" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setInt16" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getUint16" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setUint16" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getInt32" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setInt32" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getUint32" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setUint32" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getInt64" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setInt64" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getUint64" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setUint64" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getFloat32" {:kind :method
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setFloat32" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "double"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"getFloat64" {:kind :method
:return-type {:type "double"
:lib "dart:core"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"setFloat64" {:kind :method
:return-type {:type "void"}
:parameters [{:name byteOffset
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name value
:kind :positional
:type {:type "double"
:lib "dart:core"}} {:name endian
:kind :positional
:type {:type "Endian"
:lib "dart:typed_data"}}]}
"" {:kind :constructor
:parameters [{:name data
:kind :positional
:type {:type "ByteData"
:lib "dart:typed_data"}}]}
"elementSizeInBytes" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"offsetInBytes" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"lengthInBytes" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"buffer" {:kind :field
:getter true
:type {:type "ByteBuffer"
:lib "dart:typed_data"}}}
"UnmodifiableUint8ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "Uint8List"
:lib "dart:typed_data"} {:type "Uint8List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Uint8List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Uint8List"
:lib "dart:typed_data"}}]}}
"UnmodifiableInt8ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "Int8List"
:lib "dart:typed_data"} {:type "Int8List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Int8List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Int8List"
:lib "dart:typed_data"}}]}}
"UnmodifiableUint8ClampedListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "Uint8ClampedList"
:lib "dart:typed_data"} {:type "Uint8ClampedList"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Uint8ClampedList"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Uint8ClampedList"
:lib "dart:typed_data"}}]}}
"UnmodifiableUint16ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "Uint16List"
:lib "dart:typed_data"} {:type "Uint16List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Uint16List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Uint16List"
:lib "dart:typed_data"}}]}}
"UnmodifiableInt16ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "Int16List"
:lib "dart:typed_data"} {:type "Int16List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Int16List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Int16List"
:lib "dart:typed_data"}}]}}
"UnmodifiableUint32ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "Uint32List"
:lib "dart:typed_data"} {:type "Uint32List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Uint32List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Uint32List"
:lib "dart:typed_data"}}]}}
"UnmodifiableInt32ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "Int32List"
:lib "dart:typed_data"} {:type "Int32List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Int32List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Int32List"
:lib "dart:typed_data"}}]}}
"UnmodifiableUint64ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "Uint64List"
:lib "dart:typed_data"} {:type "Uint64List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Uint64List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Uint64List"
:lib "dart:typed_data"}}]}}
"UnmodifiableInt64ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "int"
:lib "dart:core"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "Int64List"
:lib "dart:typed_data"} {:type "Int64List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Int64List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Int64List"
:lib "dart:typed_data"}}]}}
"UnmodifiableInt32x4ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "Int32x4"
:lib "dart:typed_data"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "Int32x4"
:lib "dart:typed_data"} {:type "Int32x4List"
:lib "dart:typed_data"} {:type "Int32x4List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Int32x4List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Int32x4List"
:lib "dart:typed_data"}}]}}
"UnmodifiableFloat32x4ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "Float32x4"
:lib "dart:typed_data"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "Float32x4"
:lib "dart:typed_data"} {:type "Float32x4List"
:lib "dart:typed_data"} {:type "Float32x4List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Float32x4List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Float32x4List"
:lib "dart:typed_data"}}]}}
"UnmodifiableFloat64x2ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "Float64x2"
:lib "dart:typed_data"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "Float64x2"
:lib "dart:typed_data"} {:type "Float64x2List"
:lib "dart:typed_data"} {:type "Float64x2List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Float64x2List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Float64x2List"
:lib "dart:typed_data"}}]}}
"UnmodifiableFloat32ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "double"
:lib "dart:core"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "double"
:lib "dart:core"} {:type "Float32List"
:lib "dart:typed_data"} {:type "Float32List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Float32List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Float32List"
:lib "dart:typed_data"}}]}}
"UnmodifiableFloat64ListView"
{:kind :class
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "double"
:lib "dart:core"}]}
:mixins [{:type "_UnmodifiableListMixin"
:lib "dart:typed_data"
:type-parameters [{:type "double"
:lib "dart:core"} {:type "Float64List"
:lib "dart:typed_data"} {:type "Float64List"
:lib "dart:typed_data"}]}]
:interfaces [{:type "Float64List"
:lib "dart:typed_data"}]
"" {:kind :constructor
:parameters [{:name list
:kind :positional
:type {:type "Float64List"
:lib "dart:typed_data"}}]}}
}
"dart:async" {
"AsyncError"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Error"
:lib "dart:core"}]
"defaultStackTrace" {:kind :method
:static true
:return-type {:type "StackTrace"
:lib "dart:core"}
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}
"error" {:kind :field
:getter true
:type {:type "Object"
:lib "dart:core"}}
"stackTrace" {:kind :field
:getter true
:type {:type "StackTrace"
:lib "dart:core"}}}
"DeferredLibrary"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"load" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "Null"
:nullable true
:lib "dart:core"}]}}
"" {:kind :constructor
:parameters [{:name libraryName
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name uri
:kind :named
:type {:type "String"
:nullable true
:lib "dart:core"}}]}
"libraryName" {:kind :field
:getter true
:type {:type "String"
:lib "dart:core"}}
"uri" {:kind :field
:getter true
:type {:type "String"
:nullable true
:lib "dart:core"}}}
"DeferredLoadException"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Exception"
:lib "dart:core"}]
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name message
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}}
; extension FutureExtensions
"FutureOr"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}}
"Future"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
"wait" {:kind :method
:static true
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}]}
:parameters [{:name futures
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}]}} {:name eagerError
:kind :named
:type {:type "bool"
:lib "dart:core"}} {:name cleanUp
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name successValue
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"any" {:kind :method
:static true
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name futures
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}]}}]
:type-parameters [{:name "T"}]}
"forEach" {:kind :method
:static true
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}} {:name action
:kind :positional
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"doWhile" {:kind :method
:static true
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "bool"
:lib "dart:core"}]}}}]}
"then" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "R"
:is-param true}]}
:parameters [{:name onValue
:kind :positional
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "R"
:is-param true}]}
:parameters [{:name value
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name onError
:kind :named
:type {:type "Function"
:nullable true
:lib "dart:core"}}]
:type-parameters [{:name "R"}]}
"catchError" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name onError
:kind :positional
:type {:type "Function"
:lib "dart:core"}} {:name test
:kind :named
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}}]}}]}
"whenComplete" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "void"}]}}}]}
"asStream" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}
"timeout" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name timeLimit
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name onTimeout
:kind :named
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}}]}
"" {:kind :constructor
:parameters [{:name computation
:kind :positional
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}}]}
"microtask" {:kind :constructor
:parameters [{:name computation
:kind :positional
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}}]}
"sync" {:kind :constructor
:parameters [{:name computation
:kind :positional
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}}]}
"value" {:kind :constructor
:parameters [{:name value
:kind :positional
:type {:type "FutureOr"
:nullable true
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}
"error" {:kind :constructor
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}
"delayed" {:kind :constructor
:parameters [{:name duration
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name computation
:kind :positional
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}}]}}
"TimeoutException"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Exception"
:lib "dart:core"}]
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name message
:kind :positional
:type {:type "String"
:nullable true
:lib "dart:core"}} {:name duration
:kind :positional
:type {:type "Duration"
:nullable true
:lib "dart:core"}}]}
"message" {:kind :field
:getter true
:type {:type "String"
:nullable true
:lib "dart:core"}}
"duration" {:kind :field
:getter true
:type {:type "Duration"
:nullable true
:lib "dart:core"}}}
"Completer"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
"complete" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "FutureOr"
:nullable true
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}
"completeError" {:kind :method
:return-type {:type "void"}
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor}
"sync" {:kind :constructor}
"future" {:kind :field
:getter true
:type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}
"isCompleted" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
; function scheduleMicrotask []
"Stream"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
"castFrom" {:kind :method
:static true
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name source
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}}]
:type-parameters [{:name "S"} {:name "T"}]}
"asBroadcastStream" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name onListen
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name subscription
:kind :positional
:type {:type "StreamSubscription"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}} {:name onCancel
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name subscription
:kind :positional
:type {:type "StreamSubscription"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}}]}
"listen" {:kind :method
:return-type {:type "StreamSubscription"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name onData
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name event
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name onError
:kind :named
:type {:type "Function"
:nullable true
:lib "dart:core"}} {:name onDone
:kind :named
:type {:type "Function"
:return-type {:type "void"}}} {:name cancelOnError
:kind :named
:type {:type "bool"
:nullable true
:lib "dart:core"}}]}
"where" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name event
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"map" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}
:parameters [{:name convert
:kind :positional
:type {:type "Function"
:return-type {:type "S"
:is-param true}
:parameters [{:name event
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "S"}]}
"asyncMap" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name convert
:kind :positional
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name event
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "E"}]}
"asyncExpand" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name convert
:kind :positional
:type {:type "Function"
:return-type {:type "Stream"
:nullable true
:lib "dart:async"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name event
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "E"}]}
"handleError" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name onError
:kind :positional
:type {:type "Function"
:lib "dart:core"}} {:name test
:kind :named
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name error
:kind :positional
:type {:type "dynamic"}}]}}]}
"expand" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}
:parameters [{:name convert
:kind :positional
:type {:type "Function"
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "S"
:is-param true}]}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "S"}]}
"pipe" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}
:parameters [{:name streamConsumer
:kind :positional
:type {:type "StreamConsumer"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}
"transform" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}
:parameters [{:name streamTransformer
:kind :positional
:type {:type "StreamTransformer"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true} {:type "S"
:is-param true}]}}]
:type-parameters [{:name "S"}]}
"reduce" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name previous
:kind :positional
:type {:type "T"
:is-param true}} {:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"fold" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}
:parameters [{:name initialValue
:kind :positional
:type {:type "S"
:is-param true}} {:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "S"
:is-param true}
:parameters [{:name previous
:kind :positional
:type {:type "S"
:is-param true}} {:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "S"}]}
"join" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "String"
:lib "dart:core"}]}
:parameters [{:name separator
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"contains" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "bool"
:lib "dart:core"}]}
:parameters [{:name needle
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"forEach" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"every" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "bool"
:lib "dart:core"}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"any" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "bool"
:lib "dart:core"}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"cast" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"toList" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "List"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}]}}
"toSet" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "Set"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}]}}
"drain" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name futureValue
:kind :positional
:type {:type "E"
:nullable true
:is-param true}}]
:type-parameters [{:name "E"}]}
"take" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"takeWhile" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"skip" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"skipWhile" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"distinct" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name equals
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name previous
:kind :positional
:type {:type "T"
:is-param true}} {:name next
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"firstWhere" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "T"
:is-param true}}}]}
"lastWhere" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "T"
:is-param true}}}]}
"singleWhere" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "T"
:is-param true}}}]}
"elementAt" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"timeout" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name timeLimit
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name onTimeout
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name sink
:kind :positional
:type {:type "EventSink"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}}]}
"" {:kind :constructor}
"empty" {:kind :constructor}
"value" {:kind :constructor
:parameters [{:name value
:kind :positional
:type {:type "T"
:is-param true}}]}
"error" {:kind :constructor
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}
"fromFuture" {:kind :constructor
:parameters [{:name future
:kind :positional
:type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}
"fromFutures" {:kind :constructor
:parameters [{:name futures
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}]}}]}
"fromIterable" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}}]}
"multi" {:kind :constructor
:parameters [{:name onListen
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:kind :positional
:type {:type "MultiStreamController"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}} {:name isBroadcast
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"periodic" {:kind :constructor
:parameters [{:name period
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name computation
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name computationCount
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}}]}
"eventTransformed" {:kind :constructor
:parameters [{:name source
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}} {:name mapSink
:kind :positional
:type {:type "Function"
:return-type {:type "EventSink"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}
:parameters [{:name sink
:kind :positional
:type {:type "EventSink"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}}]}
"isBroadcast" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"length" {:kind :field
:getter true
:type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "int"
:lib "dart:core"}]}}
"isEmpty" {:kind :field
:getter true
:type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "bool"
:lib "dart:core"}]}}
"first" {:kind :field
:getter true
:type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}
"last" {:kind :field
:getter true
:type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}
"single" {:kind :field
:getter true
:type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}}
"StreamSubscription"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
"cancel" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "void"}]}}
"onData" {:kind :method
:return-type {:type "void"}
:parameters [{:name handleData
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name data
:kind :positional
:type {:type "T"
:is-param true}}]}}]}
"onError" {:kind :method
:return-type {:type "void"}
:parameters [{:name handleError
:kind :positional
:type {:type "Function"
:nullable true
:lib "dart:core"}}]}
"onDone" {:kind :method
:return-type {:type "void"}
:parameters [{:name handleDone
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}
"pause" {:kind :method
:return-type {:type "void"}
:parameters [{:name resumeSignal
:kind :positional
:type {:type "Future"
:nullable true
:lib "dart:async"
:type-parameters [{:type "void"}]}}]}
"resume" {:kind :method
:return-type {:type "void"}}
"asFuture" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name futureValue
:kind :positional
:type {:type "E"
:nullable true
:is-param true}}]
:type-parameters [{:name "E"}]}
"" {:kind :constructor}
"isPaused" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"EventSink"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Sink"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}]
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name event
:kind :positional
:type {:type "T"
:is-param true}}]}
"addError" {:kind :method
:return-type {:type "void"}
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}
"close" {:kind :method
:return-type {:type "void"}}
"" {:kind :constructor}}
"StreamView"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
"asBroadcastStream" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name onListen
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name subscription
:kind :positional
:type {:type "StreamSubscription"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}} {:name onCancel
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name subscription
:kind :positional
:type {:type "StreamSubscription"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}}]}
"listen" {:kind :method
:return-type {:type "StreamSubscription"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name onData
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name onError
:kind :named
:type {:type "Function"
:nullable true
:lib "dart:core"}} {:name onDone
:kind :named
:type {:type "Function"
:return-type {:type "void"}}} {:name cancelOnError
:kind :named
:type {:type "bool"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}
"isBroadcast" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"StreamConsumer"
{:kind :class
:type-parameters [{:name "S"}]
:super {:type "Object"
:lib "dart:core"}
"addStream" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}}]}
"close" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}}
"" {:kind :constructor}}
"StreamSink"
{:kind :class
:type-parameters [{:name "S"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "EventSink"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]} {:type "StreamConsumer"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}]
"close" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}}
"" {:kind :constructor}
"done" {:kind :field
:getter true
:type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}}}
"StreamTransformer"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "Object"
:lib "dart:core"}
"castFrom" {:kind :method
:static true
:return-type {:type "StreamTransformer"
:lib "dart:async"
:type-parameters [{:type "TS"
:is-param true} {:type "TT"
:is-param true}]}
:parameters [{:name source
:kind :positional
:type {:type "StreamTransformer"
:lib "dart:async"
:type-parameters [{:type "SS"
:is-param true} {:type "ST"
:is-param true}]}}]
:type-parameters [{:name "SS"} {:name "ST"} {:name "TS"} {:name "TT"}]}
"bind" {:kind :method
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}}]}
"cast" {:kind :method
:return-type {:type "StreamTransformer"
:lib "dart:async"
:type-parameters [{:type "RS"
:is-param true} {:type "RT"
:is-param true}]}
:type-parameters [{:name "RS"} {:name "RT"}]}
"" {:kind :constructor
:parameters [{:name onListen
:kind :positional
:type {:type "Function"
:return-type {:type "StreamSubscription"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}} {:name cancelOnError
:kind :positional
:type {:type "bool"
:lib "dart:core"}}]}}]}
"fromHandlers" {:kind :constructor
:parameters [{:name handleData
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name data
:kind :positional
:type {:type "S"
:is-param true}} {:name sink
:kind :positional
:type {:type "EventSink"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}} {:name handleError
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:lib "dart:core"}} {:name sink
:kind :positional
:type {:type "EventSink"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}} {:name handleDone
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name sink
:kind :positional
:type {:type "EventSink"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}}]}
"fromBind" {:kind :constructor
:parameters [{:name bind
:kind :positional
:type {:type "Function"
:return-type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true}]}}]}}]}}
"StreamTransformerBase"
{:kind :class
:type-parameters [{:name "S"} {:name "T"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "StreamTransformer"
:lib "dart:async"
:type-parameters [{:type "S"
:is-param true} {:type "T"
:is-param true}]}]
"cast" {:kind :method
:return-type {:type "StreamTransformer"
:lib "dart:async"
:type-parameters [{:type "RS"
:is-param true} {:type "RT"
:is-param true}]}
:type-parameters [{:name "RS"} {:name "RT"}]}
"" {:kind :constructor}}
"StreamIterator"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
"moveNext" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "bool"
:lib "dart:core"}]}}
"cancel" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}}
"" {:kind :constructor
:parameters [{:name stream
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}]}
"current" {:kind :field
:getter true
:type {:type "T"
:is-param true}}}
"MultiStreamController"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "StreamController"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}]
"addSync" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "T"
:is-param true}}]}
"addErrorSync" {:kind :method
:return-type {:type "void"}
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}
"closeSync" {:kind :method
:return-type {:type "void"}}
"" {:kind :constructor}}
; function type alias ControllerCallback
; typedef ControllerCallback
; function type alias ControllerCancelCallback
; typedef ControllerCancelCallback
"StreamController"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "StreamSink"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}]
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name event
:kind :positional
:type {:type "T"
:is-param true}}]}
"addError" {:kind :method
:return-type {:type "void"}
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}
"close" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}}
"addStream" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}
:parameters [{:name source
:kind :positional
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}} {:name cancelOnError
:kind :named
:type {:type "bool"
:nullable true
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name onListen
:kind :named
:type {:type "Function"
:return-type {:type "void"}}} {:name onPause
:kind :named
:type {:type "Function"
:return-type {:type "void"}}} {:name onResume
:kind :named
:type {:type "Function"
:return-type {:type "void"}}} {:name onCancel
:kind :named
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "void"}]}}} {:name sync
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"broadcast" {:kind :constructor
:parameters [{:name onListen
:kind :named
:type {:type "Function"
:return-type {:type "void"}}} {:name onCancel
:kind :named
:type {:type "Function"
:return-type {:type "void"}}} {:name sync
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"onListen" {:kind :field
:getter true
:setter true
:type {:type "Function"
:return-type {:type "void"}}}
"onPause" {:kind :field
:getter true
:setter true
:type {:type "Function"
:return-type {:type "void"}}}
"onResume" {:kind :field
:getter true
:setter true
:type {:type "Function"
:return-type {:type "void"}}}
"onCancel" {:kind :field
:getter true
:setter true
:type {:type "Function"
:return-type {:type "FutureOr"
:lib "dart:async"
:type-parameters [{:type "void"}]}}}
"stream" {:kind :field
:getter true
:type {:type "Stream"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}
"sink" {:kind :field
:getter true
:type {:type "StreamSink"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}}
"isClosed" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isPaused" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"hasListener" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"done" {:kind :field
:getter true
:type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}}}
"SynchronousStreamController"
{:kind :class
:type-parameters [{:name "T"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "StreamController"
:lib "dart:async"
:type-parameters [{:type "T"
:is-param true}]}]
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name data
:kind :positional
:type {:type "T"
:is-param true}}]}
"addError" {:kind :method
:return-type {:type "void"}
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}
"close" {:kind :method
:return-type {:type "Future"
:lib "dart:async"
:type-parameters [{:type "dynamic"}]}}
"" {:kind :constructor}}
"Timer"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"run" {:kind :method
:static true
:return-type {:type "void"}
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}
"cancel" {:kind :method
:return-type {:type "void"}}
"" {:kind :constructor
:parameters [{:name duration
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}
"periodic" {:kind :constructor
:parameters [{:name duration
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name timer
:kind :positional
:type {:type "Timer"
:lib "dart:async"}}]}}]}
"tick" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isActive" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
; function runZoned [R]
; function runZonedGuarded [R]
; function type alias ZoneCallback
; typedef ZoneCallback
; function type alias ZoneUnaryCallback
; typedef ZoneUnaryCallback
; function type alias ZoneBinaryCallback
; typedef ZoneBinaryCallback
; typedef HandleUncaughtErrorHandler
; typedef RunHandler
; typedef RunUnaryHandler
; typedef RunBinaryHandler
; typedef RegisterCallbackHandler
; typedef RegisterUnaryCallbackHandler
; typedef RegisterBinaryCallbackHandler
; function type alias ErrorCallbackHandler
; typedef ErrorCallbackHandler
; function type alias ScheduleMicrotaskHandler
; typedef ScheduleMicrotaskHandler
; function type alias CreateTimerHandler
; typedef CreateTimerHandler
; function type alias CreatePeriodicTimerHandler
; typedef CreatePeriodicTimerHandler
; function type alias PrintHandler
; typedef PrintHandler
; function type alias ForkHandler
; typedef ForkHandler
"ZoneSpecification"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"" {:kind :constructor
:parameters [{:name handleUncaughtError
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:lib "dart:core"}}]}} {:name run
:kind :named
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}}}]
:type-parameters [{:name "R"}]}} {:name runUnary
:kind :named
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name arg
:kind :positional
:type {:type "T"
:is-param true}}]
:type-parameters [{:name "R"} {:name "T"}]}} {:name runBinary
:kind :named
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}} {:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]
:type-parameters [{:name "R"} {:name "T1"} {:name "T2"}]}} {:name registerCallback
:kind :named
:type {:type "Function"
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}}}]
:type-parameters [{:name "R"}]}} {:name registerUnaryCallback
:kind :named
:type {:type "Function"
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T"}]}} {:name registerBinaryCallback
:kind :named
:type {:type "Function"
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T1"} {:name "T2"}]}} {:name errorCallback
:kind :named
:type {:type "Function"
:return-type {:type "AsyncError"
:nullable true
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}} {:name scheduleMicrotask
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}} {:name createTimer
:kind :named
:type {:type "Function"
:return-type {:type "Timer"
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name duration
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}} {:name createPeriodicTimer
:kind :named
:type {:type "Function"
:return-type {:type "Timer"
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name period
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name timer
:kind :positional
:type {:type "Timer"
:lib "dart:async"}}]}}]}} {:name print
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name line
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}} {:name fork
:kind :named
:type {:type "Function"
:return-type {:type "Zone"
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name specification
:kind :positional
:type {:type "ZoneSpecification"
:nullable true
:lib "dart:async"}} {:name zoneValues
:kind :positional
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"} {:type "Object"
:nullable true
:lib "dart:core"}]}}]}}]}
"from" {:kind :constructor
:parameters [{:name other
:kind :positional
:type {:type "ZoneSpecification"
:lib "dart:async"}} {:name handleUncaughtError
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:lib "dart:core"}}]}} {:name run
:kind :named
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}}}]
:type-parameters [{:name "R"}]}} {:name runUnary
:kind :named
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name arg
:kind :positional
:type {:type "T"
:is-param true}}]
:type-parameters [{:name "R"} {:name "T"}]}} {:name runBinary
:kind :named
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}} {:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]
:type-parameters [{:name "R"} {:name "T1"} {:name "T2"}]}} {:name registerCallback
:kind :named
:type {:type "Function"
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}}}]
:type-parameters [{:name "R"}]}} {:name registerUnaryCallback
:kind :named
:type {:type "Function"
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T"}]}} {:name registerBinaryCallback
:kind :named
:type {:type "Function"
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T1"} {:name "T2"}]}} {:name errorCallback
:kind :named
:type {:type "Function"
:return-type {:type "AsyncError"
:nullable true
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}} {:name scheduleMicrotask
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}} {:name createTimer
:kind :named
:type {:type "Function"
:return-type {:type "Timer"
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name duration
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}} {:name createPeriodicTimer
:kind :named
:type {:type "Function"
:return-type {:type "Timer"
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name period
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name timer
:kind :positional
:type {:type "Timer"
:lib "dart:async"}}]}}]}} {:name print
:kind :named
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name line
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}} {:name fork
:kind :named
:type {:type "Function"
:return-type {:type "Zone"
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name specification
:kind :positional
:type {:type "ZoneSpecification"
:nullable true
:lib "dart:async"}} {:name zoneValues
:kind :positional
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"} {:type "Object"
:nullable true
:lib "dart:core"}]}}]}}]}
"handleUncaughtError" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:lib "dart:core"}}]}}
"run" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}}}]
:type-parameters [{:name "R"}]}}
"runUnary" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name arg
:kind :positional
:type {:type "T"
:is-param true}}]
:type-parameters [{:name "R"} {:name "T"}]}}
"runBinary" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}} {:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]
:type-parameters [{:name "R"} {:name "T1"} {:name "T2"}]}}
"registerCallback" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}}}]
:type-parameters [{:name "R"}]}}
"registerUnaryCallback" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T"}]}}
"registerBinaryCallback" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T1"} {:name "T2"}]}}
"errorCallback" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "AsyncError"
:nullable true
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}}
"scheduleMicrotask" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}}
"createTimer" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "Timer"
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name duration
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}}
"createPeriodicTimer" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "Timer"
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name period
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name timer
:kind :positional
:type {:type "Timer"
:lib "dart:async"}}]}}]}}
"print" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name line
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}}
"fork" {:kind :field
:getter true
:type {:type "Function"
:return-type {:type "Zone"
:lib "dart:async"}
:parameters [{:name self
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name parent
:kind :positional
:type {:type "ZoneDelegate"
:lib "dart:async"}} {:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name specification
:kind :positional
:type {:type "ZoneSpecification"
:nullable true
:lib "dart:async"}} {:name zoneValues
:kind :positional
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"} {:type "Object"
:nullable true
:lib "dart:core"}]}}]}}}
"ZoneDelegate"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"handleUncaughtError" {:kind :method
:return-type {:type "void"}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:lib "dart:core"}}]}
"run" {:kind :method
:return-type {:type "R"
:is-param true}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}}}]
:type-parameters [{:name "R"}]}
"runUnary" {:kind :method
:return-type {:type "R"
:is-param true}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name arg
:kind :positional
:type {:type "T"
:is-param true}}]
:type-parameters [{:name "R"} {:name "T"}]}
"runBinary" {:kind :method
:return-type {:type "R"
:is-param true}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}} {:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]
:type-parameters [{:name "R"} {:name "T1"} {:name "T2"}]}
"registerCallback" {:kind :method
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}}}]
:type-parameters [{:name "R"}]}
"registerUnaryCallback" {:kind :method
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T"}]}
"registerBinaryCallback" {:kind :method
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T1"} {:name "T2"}]}
"errorCallback" {:kind :method
:return-type {:type "AsyncError"
:nullable true
:lib "dart:async"}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}
"scheduleMicrotask" {:kind :method
:return-type {:type "void"}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}
"createTimer" {:kind :method
:return-type {:type "Timer"
:lib "dart:async"}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name duration
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}
"createPeriodicTimer" {:kind :method
:return-type {:type "Timer"
:lib "dart:async"}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name period
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name timer
:kind :positional
:type {:type "Timer"
:lib "dart:async"}}]}}]}
"print" {:kind :method
:return-type {:type "void"}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name line
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"fork" {:kind :method
:return-type {:type "Zone"
:lib "dart:async"}
:parameters [{:name zone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}} {:name specification
:kind :positional
:type {:type "ZoneSpecification"
:nullable true
:lib "dart:async"}} {:name zoneValues
:kind :positional
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "dynamic"} {:type "dynamic"}]}}]}
"" {:kind :constructor}}
"Zone"
{:kind :class
:super {:type "Object"
:lib "dart:core"}
"handleUncaughtError" {:kind :method
:return-type {:type "void"}
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:lib "dart:core"}}]}
"inSameErrorZone" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name otherZone
:kind :positional
:type {:type "Zone"
:lib "dart:async"}}]}
"fork" {:kind :method
:return-type {:type "Zone"
:lib "dart:async"}
:parameters [{:name specification
:kind :named
:type {:type "ZoneSpecification"
:nullable true
:lib "dart:async"}} {:name zoneValues
:kind :named
:type {:type "Map"
:nullable true
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"} {:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"run" {:kind :method
:return-type {:type "R"
:is-param true}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}}}]
:type-parameters [{:name "R"}]}
"runUnary" {:kind :method
:return-type {:type "R"
:is-param true}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name argument
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name argument
:kind :positional
:type {:type "T"
:is-param true}}]
:type-parameters [{:name "R"} {:name "T"}]}
"runBinary" {:kind :method
:return-type {:type "R"
:is-param true}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name argument1
:kind :positional
:type {:type "T1"
:is-param true}} {:name argument2
:kind :positional
:type {:type "T2"
:is-param true}}]}} {:name argument1
:kind :positional
:type {:type "T1"
:is-param true}} {:name argument2
:kind :positional
:type {:type "T2"
:is-param true}}]
:type-parameters [{:name "R"} {:name "T1"} {:name "T2"}]}
"runGuarded" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}
"runUnaryGuarded" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name argument
:kind :positional
:type {:type "T"
:is-param true}}]}} {:name argument
:kind :positional
:type {:type "T"
:is-param true}}]
:type-parameters [{:name "T"}]}
"runBinaryGuarded" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name argument1
:kind :positional
:type {:type "T1"
:is-param true}} {:name argument2
:kind :positional
:type {:type "T2"
:is-param true}}]}} {:name argument1
:kind :positional
:type {:type "T1"
:is-param true}} {:name argument2
:kind :positional
:type {:type "T2"
:is-param true}}]
:type-parameters [{:name "T1"} {:name "T2"}]}
"registerCallback" {:kind :method
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}}
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}}}]
:type-parameters [{:name "R"}]}
"registerUnaryCallback" {:kind :method
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T"}]}
"registerBinaryCallback" {:kind :method
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T1"} {:name "T2"}]}
"bindCallback" {:kind :method
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}}
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}}}]
:type-parameters [{:name "R"}]}
"bindUnaryCallback" {:kind :method
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg
:kind :positional
:type {:type "T"
:is-param true}}]}
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name argument
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T"}]}
"bindBinaryCallback" {:kind :method
:return-type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name arg1
:kind :positional
:type {:type "T1"
:is-param true}} {:name arg2
:kind :positional
:type {:type "T2"
:is-param true}}]}
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "R"
:is-param true}
:parameters [{:name argument1
:kind :positional
:type {:type "T1"
:is-param true}} {:name argument2
:kind :positional
:type {:type "T2"
:is-param true}}]}}]
:type-parameters [{:name "R"} {:name "T1"} {:name "T2"}]}
"bindCallbackGuarded" {:kind :method
:return-type {:type "Function"
:return-type {:type "void"}}
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}
"bindUnaryCallbackGuarded" {:kind :method
:return-type {:type "Function"
:return-type {:type "void"}
:parameters [{:kind :positional
:type {:type "T"
:is-param true}}]}
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name argument
:kind :positional
:type {:type "T"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"bindBinaryCallbackGuarded" {:kind :method
:return-type {:type "Function"
:return-type {:type "void"}
:parameters [{:kind :positional
:type {:type "T1"
:is-param true}} {:kind :positional
:type {:type "T2"
:is-param true}}]}
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name argument1
:kind :positional
:type {:type "T1"
:is-param true}} {:name argument2
:kind :positional
:type {:type "T2"
:is-param true}}]}}]
:type-parameters [{:name "T1"} {:name "T2"}]}
"errorCallback" {:kind :method
:return-type {:type "AsyncError"
:nullable true
:lib "dart:async"}
:parameters [{:name error
:kind :positional
:type {:type "Object"
:lib "dart:core"}} {:name stackTrace
:kind :positional
:type {:type "StackTrace"
:nullable true
:lib "dart:core"}}]}
"scheduleMicrotask" {:kind :method
:return-type {:type "void"}
:parameters [{:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}
"createTimer" {:kind :method
:return-type {:type "Timer"
:lib "dart:async"}
:parameters [{:name duration
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}}}]}
"createPeriodicTimer" {:kind :method
:return-type {:type "Timer"
:lib "dart:async"}
:parameters [{:name period
:kind :positional
:type {:type "Duration"
:lib "dart:core"}} {:name callback
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name timer
:kind :positional
:type {:type "Timer"
:lib "dart:async"}}]}}]}
"print" {:kind :method
:return-type {:type "void"}
:parameters [{:name line
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"[]" {:kind :method
:operator true
:return-type {:type "dynamic"}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"root" {:kind :field
:static true
:getter true
:type {:type "Zone"
:lib "dart:async"}}
"current" {:kind :field
:static true
:getter true
:type {:type "Zone"
:lib "dart:async"}}
"parent" {:kind :field
:getter true
:type {:type "Zone"
:nullable true
:lib "dart:async"}}
"errorZone" {:kind :field
:getter true
:type {:type "Zone"
:lib "dart:async"}}}
}
"dart:collection" {
"UnmodifiableListView"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "UnmodifiableListBase"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}
"cast" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"[]" {:kind :method
:operator true
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"" {:kind :constructor
:parameters [{:name source
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}}
"HashMap"
{:kind :class
:type-parameters [{:name "K"} {:name "V"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]
"" {:kind :constructor
:parameters [{:name equals
:kind :named
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "K"
:is-param true}} {:kind :positional
:type {:type "K"
:is-param true}}]}} {:name hashCode
:kind :named
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "K"
:is-param true}}]}} {:name isValidKey
:kind :named
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "dynamic"}}]}}]}
"identity" {:kind :constructor}
"from" {:kind :constructor
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "dynamic"} {:type "dynamic"}]}}]}
"of" {:kind :constructor
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}}]}
"fromIterable" {:kind :constructor
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name key
:kind :named
:type {:type "Function"
:return-type {:type "K"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "dynamic"}}]}} {:name value
:kind :named
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "dynamic"}}]}}]}
"fromIterables" {:kind :constructor
:parameters [{:name keys
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true}]}} {:name values
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "V"
:is-param true}]}}]}
"fromEntries" {:kind :constructor
:parameters [{:name entries
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}}]}}
"HashSet"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}]
"" {:kind :constructor
:parameters [{:name equals
:kind :named
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "E"
:is-param true}} {:kind :positional
:type {:type "E"
:is-param true}}]}} {:name hashCode
:kind :named
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "E"
:is-param true}}]}} {:name isValidKey
:kind :named
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "dynamic"}}]}}]}
"identity" {:kind :constructor}
"from" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}}]}
"of" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}}
"IterableMixin"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}]
"cast" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"map" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"where" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"whereType" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:type-parameters [{:name "T"}]}
"expand" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"followedBy" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"reduce" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "E"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"fold" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name initialValue
:kind :positional
:type {:type "T"
:is-param true}} {:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name previousValue
:kind :positional
:type {:type "T"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"every" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"join" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name separator
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"any" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"toList" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"toSet" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"take" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"takeWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"skip" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"skipWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"firstWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"lastWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"singleWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"elementAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"single" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"IterableBase"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"iterableToShortString" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name leftDelimiter
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name rightDelimiter
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"iterableToFullString" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name leftDelimiter
:kind :positional
:type {:type "String"
:lib "dart:core"}} {:name rightDelimiter
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"" {:kind :constructor}}
"HasNextIterator"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
"next" {:kind :method
:return-type {:type "E"
:is-param true}}
"" {:kind :constructor
:parameters [{:name _iterator
:kind :positional
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"hasNext" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"LinkedHashMap"
{:kind :class
:type-parameters [{:name "K"} {:name "V"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]
"" {:kind :constructor
:parameters [{:name equals
:kind :named
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "K"
:is-param true}} {:kind :positional
:type {:type "K"
:is-param true}}]}} {:name hashCode
:kind :named
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "K"
:is-param true}}]}} {:name isValidKey
:kind :named
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "dynamic"}}]}}]}
"identity" {:kind :constructor}
"from" {:kind :constructor
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "dynamic"} {:type "dynamic"}]}}]}
"of" {:kind :constructor
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}}]}
"fromIterable" {:kind :constructor
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name key
:kind :named
:type {:type "Function"
:return-type {:type "K"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "dynamic"}}]}} {:name value
:kind :named
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "dynamic"}}]}}]}
"fromIterables" {:kind :constructor
:parameters [{:name keys
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true}]}} {:name values
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "V"
:is-param true}]}}]}
"fromEntries" {:kind :constructor
:parameters [{:name entries
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}}]}}
"LinkedHashSet"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}]
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"" {:kind :constructor
:parameters [{:name equals
:kind :named
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "E"
:is-param true}} {:kind :positional
:type {:type "E"
:is-param true}}]}} {:name hashCode
:kind :named
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "E"
:is-param true}}]}} {:name isValidKey
:kind :named
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:kind :positional
:type {:type "dynamic"}}]}}]}
"identity" {:kind :constructor}
"from" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}}]}
"of" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}}
"LinkedList"
{:kind :class
:type-parameters [{:name "E"
:bound {:type "LinkedListEntry"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
"addFirst" {:kind :method
:return-type {:type "void"}
:parameters [{:name entry
:kind :positional
:type {:type "E"
:is-param true}}]}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name entry
:kind :positional
:type {:type "E"
:is-param true}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name entries
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name entry
:kind :positional
:type {:type "E"
:is-param true}}]}
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name entry
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name entry
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"" {:kind :constructor}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"single" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}}
"LinkedListEntry"
{:kind :class
:type-parameters [{:name "E"
:bound {:type "LinkedListEntry"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}}]
:super {:type "Object"
:lib "dart:core"}
"unlink" {:kind :method
:return-type {:type "void"}}
"insertAfter" {:kind :method
:return-type {:type "void"}
:parameters [{:name entry
:kind :positional
:type {:type "E"
:is-param true}}]}
"insertBefore" {:kind :method
:return-type {:type "void"}
:parameters [{:name entry
:kind :positional
:type {:type "E"
:is-param true}}]}
"" {:kind :constructor}
"list" {:kind :field
:getter true
:type {:type "LinkedList"
:nullable true
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}}
"next" {:kind :field
:getter true
:type {:type "E"
:nullable true
:is-param true}}
"previous" {:kind :field
:getter true
:type {:type "E"
:nullable true
:is-param true}}}
"ListBase"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:mixins [{:type "ListMixin"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}]
"listToString" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name list
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}}]}
"" {:kind :constructor}}
"ListMixin"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}]
"elementAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"followedBy" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"every" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"any" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"firstWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"lastWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"singleWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"join" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name separator
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"where" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"whereType" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:type-parameters [{:name "T"}]}
"map" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"expand" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"reduce" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "E"
:is-param true}
:parameters [{:name previousValue
:kind :positional
:type {:type "E"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"fold" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name initialValue
:kind :positional
:type {:type "T"
:is-param true}} {:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name previousValue
:kind :positional
:type {:type "T"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"skip" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"skipWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"take" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name count
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"takeWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"toList" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"toSet" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"retainWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"cast" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"removeLast" {:kind :method
:return-type {:type "E"
:is-param true}}
"sort" {:kind :method
:return-type {:type "void"}
:parameters [{:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name a
:kind :positional
:type {:type "E"
:is-param true}} {:name b
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"shuffle" {:kind :method
:return-type {:type "void"}
:parameters [{:name random
:kind :positional
:type {:type "Random"
:nullable true
:lib "dart:math"}}]}
"asMap" {:kind :method
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "int"
:lib "dart:core"} {:type "E"
:is-param true}]}}
"+" {:kind :method
:operator true
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"sublist" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"getRange" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"removeRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"fillRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name fill
:kind :positional
:type {:type "E"
:nullable true
:is-param true}}]}
"setRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name skipCount
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"replaceRange" {:kind :method
:return-type {:type "void"}
:parameters [{:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name end
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name newContents
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"indexOf" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"indexWhere" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name start
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"lastIndexOf" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}} {:name start
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"lastIndexWhere" {:kind :method
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name start
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"insert" {:kind :method
:return-type {:type "void"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}
"removeAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"insertAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"setAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}} {:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:setter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:setter true
:type {:type "E"
:is-param true}}
"single" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"reversed" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}}
"MapBase"
{:kind :class
:type-parameters [{:name "K"} {:name "V"}]
:super {:type "MapMixin"
:lib "dart:collection"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}
"mapToString" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name m
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"} {:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"" {:kind :constructor}}
"MapMixin"
{:kind :class
:type-parameters [{:name "K"} {:name "V"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]
"[]" {:kind :method
:operator true
:return-type {:type "V"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"[]=" {:kind :method
:operator true
:return-type {:type "void"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}
"remove" {:kind :method
:return-type {:type "V"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"cast" {:kind :method
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "RK"
:is-param true} {:type "RV"
:is-param true}]}
:type-parameters [{:name "RK"} {:name "RV"}]}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}}]}
"containsValue" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"putIfAbsent" {:kind :method
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name ifAbsent
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}}}]}
"update" {:kind :method
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name update
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "V"
:is-param true}}]}} {:name ifAbsent
:kind :named
:type {:type "Function"
:return-type {:type "V"
:is-param true}}}]}
"updateAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name update
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"map" {:kind :method
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K2"
:is-param true} {:type "V2"
:is-param true}]}
:parameters [{:name transform
:kind :positional
:type {:type "Function"
:return-type {:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K2"
:is-param true} {:type "V2"
:is-param true}]}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]
:type-parameters [{:name "K2"} {:name "V2"}]}
"addEntries" {:kind :method
:return-type {:type "void"}
:parameters [{:name newEntries
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"containsKey" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}
"keys" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true}]}}
"entries" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"values" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "V"
:is-param true}]}}}
"UnmodifiableMapBase"
{:kind :class
:type-parameters [{:name "K"} {:name "V"}]
:super {:type "MapBase"
:lib "dart:collection"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}
:mixins [{:type "_UnmodifiableMapMixin"
:lib "dart:collection"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]
"" {:kind :constructor}}
"MapView"
{:kind :class
:type-parameters [{:name "K"} {:name "V"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]
"cast" {:kind :method
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "RK"
:is-param true} {:type "RV"
:is-param true}]}
:type-parameters [{:name "RK"} {:name "RV"}]}
"[]" {:kind :method
:operator true
:return-type {:type "V"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"[]=" {:kind :method
:operator true
:return-type {:type "void"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"putIfAbsent" {:kind :method
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name ifAbsent
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}}}]}
"containsKey" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"containsValue" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"remove" {:kind :method
:return-type {:type "V"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"addEntries" {:kind :method
:return-type {:type "void"}
:parameters [{:name entries
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}}]}
"map" {:kind :method
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K2"
:is-param true} {:type "V2"
:is-param true}]}
:parameters [{:name transform
:kind :positional
:type {:type "Function"
:return-type {:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K2"
:is-param true} {:type "V2"
:is-param true}]}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]
:type-parameters [{:name "K2"} {:name "V2"}]}
"update" {:kind :method
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name update
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "V"
:is-param true}}]}} {:name ifAbsent
:kind :named
:type {:type "Function"
:return-type {:type "V"
:is-param true}}}]}
"updateAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name update
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"" {:kind :constructor
:parameters [{:name map
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}}]}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"keys" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true}]}}
"values" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "V"
:is-param true}]}}
"entries" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "MapEntry"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}}}
"UnmodifiableMapView"
{:kind :class
:type-parameters [{:name "K"} {:name "V"}]
:super {:type "MapView"
:lib "dart:collection"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}
:mixins [{:type "_UnmodifiableMapMixin"
:lib "dart:collection"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]
"cast" {:kind :method
:return-type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "RK"
:is-param true} {:type "RV"
:is-param true}]}
:type-parameters [{:name "RK"} {:name "RV"}]}
"" {:kind :constructor
:parameters [{:name map
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}}]}}
"Queue"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "EfficientLengthIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}]
"castFrom" {:kind :method
:static true
:return-type {:type "Queue"
:lib "dart:collection"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name source
:kind :positional
:type {:type "Queue"
:lib "dart:collection"
:type-parameters [{:type "S"
:is-param true}]}}]
:type-parameters [{:name "S"} {:name "T"}]}
"cast" {:kind :method
:return-type {:type "Queue"
:lib "dart:collection"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"removeFirst" {:kind :method
:return-type {:type "E"
:is-param true}}
"removeLast" {:kind :method
:return-type {:type "E"
:is-param true}}
"addFirst" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"addLast" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"retainWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"" {:kind :constructor}
"from" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}}]}
"of" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}}
"DoubleLinkedQueueEntry"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "_DoubleLink"
:lib "dart:collection"
:type-parameters [{:type "DoubleLinkedQueueEntry"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}]}
"append" {:kind :method
:return-type {:type "void"}
:parameters [{:name e
:kind :positional
:type {:type "E"
:is-param true}}]}
"prepend" {:kind :method
:return-type {:type "void"}
:parameters [{:name e
:kind :positional
:type {:type "E"
:is-param true}}]}
"remove" {:kind :method
:return-type {:type "E"
:is-param true}}
"previousEntry" {:kind :method
:return-type {:type "DoubleLinkedQueueEntry"
:nullable true
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}}
"nextEntry" {:kind :method
:return-type {:type "DoubleLinkedQueueEntry"
:nullable true
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}}
"" {:kind :constructor
:parameters [{:name _element
:kind :positional
:type {:type "E"
:nullable true
:is-param true}}]}
"element" {:kind :field
:getter true
:setter true
:type {:type "E"
:is-param true}}}
"DoubleLinkedQueue"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:interfaces [{:type "Queue"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}]
"cast" {:kind :method
:return-type {:type "Queue"
:lib "dart:collection"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"addLast" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"addFirst" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"removeLast" {:kind :method
:return-type {:type "E"
:is-param true}}
"removeFirst" {:kind :method
:return-type {:type "E"
:is-param true}}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name o
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"retainWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"firstEntry" {:kind :method
:return-type {:type "DoubleLinkedQueueEntry"
:nullable true
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}}
"lastEntry" {:kind :method
:return-type {:type "DoubleLinkedQueueEntry"
:nullable true
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}}
"clear" {:kind :method
:return-type {:type "void"}}
"forEachEntry" {:kind :method
:return-type {:type "void"}
:parameters [{:name action
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name element
:kind :positional
:type {:type "DoubleLinkedQueueEntry"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}}]}}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor}
"from" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}}]}
"of" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"single" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"iterator" {:kind :field
:getter true
:type {:type "_DoubleLinkedQueueIterator"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}}}
"ListQueue"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "ListIterable"
:lib "dart:_internal"
:type-parameters [{:type "E"
:is-param true}]}
:interfaces [{:type "Queue"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}]
"cast" {:kind :method
:return-type {:type "Queue"
:lib "dart:collection"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"elementAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"toList" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"add" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"retainWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"addLast" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"addFirst" {:kind :method
:return-type {:type "void"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"removeFirst" {:kind :method
:return-type {:type "E"
:is-param true}}
"removeLast" {:kind :method
:return-type {:type "E"
:is-param true}}
"" {:kind :constructor
:parameters [{:name initialCapacity
:kind :positional
:type {:type "int"
:nullable true
:lib "dart:core"}}]}
"from" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}}]}
"of" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"single" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"SetMixin"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:interfaces [{:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}]
"add" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"lookup" {:kind :method
:return-type {:type "E"
:nullable true
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"toSet" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"cast" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"followedBy" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"whereType" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:type-parameters [{:name "T"}]}
"clear" {:kind :method
:return-type {:type "void"}}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"removeAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"retainAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"removeWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"retainWhere" {:kind :method
:return-type {:type "void"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"containsAll" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name other
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"union" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"intersection" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"difference" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"toList" {:kind :method
:return-type {:type "List"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name growable
:kind :named
:type {:type "bool"
:lib "dart:core"}}]}
"map" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"where" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"expand" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "T"
:is-param true}]}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"reduce" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "E"
:is-param true}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"fold" {:kind :method
:return-type {:type "T"
:is-param true}
:parameters [{:name initialValue
:kind :positional
:type {:type "T"
:is-param true}} {:name combine
:kind :positional
:type {:type "Function"
:return-type {:type "T"
:is-param true}
:parameters [{:name previousValue
:kind :positional
:type {:type "T"
:is-param true}} {:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]
:type-parameters [{:name "T"}]}
"every" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"join" {:kind :method
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name separator
:kind :positional
:type {:type "String"
:lib "dart:core"}}]}
"any" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"take" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name n
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"takeWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"skip" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name n
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"skipWhile" {:kind :method
:return-type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}}]}
"firstWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"lastWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"singleWhere" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name test
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name orElse
:kind :named
:type {:type "Function"
:return-type {:type "E"
:is-param true}}}]}
"elementAt" {:kind :method
:return-type {:type "E"
:is-param true}
:parameters [{:name index
:kind :positional
:type {:type "int"
:lib "dart:core"}}]}
"" {:kind :constructor}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"single" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"first" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
"SetBase"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "Object"
:lib "dart:core"}
:mixins [{:type "SetMixin"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}]
"setToString" {:kind :method
:static true
:return-type {:type "String"
:lib "dart:core"}
:parameters [{:name set
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}}]}
"" {:kind :constructor}}
"UnmodifiableSetView"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "SetBase"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}
:mixins [{:type "_UnmodifiableSetMixin"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}]
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"lookup" {:kind :method
:return-type {:type "E"
:nullable true
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"toSet" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"" {:kind :constructor
:parameters [{:name source
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}}
"SplayTreeMap"
{:kind :class
:type-parameters [{:name "K"} {:name "V"}]
:super {:type "_SplayTree"
:lib "dart:collection"
:type-parameters [{:type "K"
:is-param true} {:type "_SplayTreeMapNode"
:lib "dart:collection"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]}
:mixins [{:type "MapMixin"
:lib "dart:collection"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}]
"[]" {:kind :method
:operator true
:return-type {:type "V"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"remove" {:kind :method
:return-type {:type "V"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"[]=" {:kind :method
:operator true
:return-type {:type "void"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}
"putIfAbsent" {:kind :method
:return-type {:type "V"
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name ifAbsent
:kind :positional
:type {:type "Function"
:return-type {:type "V"
:is-param true}}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}}]}
"forEach" {:kind :method
:return-type {:type "void"}
:parameters [{:name f
:kind :positional
:type {:type "Function"
:return-type {:type "void"}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}} {:name value
:kind :positional
:type {:type "V"
:is-param true}}]}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"containsKey" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name key
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"containsValue" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name value
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"firstKey" {:kind :method
:return-type {:type "K"
:nullable true
:is-param true}}
"lastKey" {:kind :method
:return-type {:type "K"
:nullable true
:is-param true}}
"lastKeyBefore" {:kind :method
:return-type {:type "K"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}}]}
"firstKeyAfter" {:kind :method
:return-type {:type "K"
:nullable true
:is-param true}
:parameters [{:name key
:kind :positional
:type {:type "K"
:is-param true}}]}
"" {:kind :constructor
:parameters [{:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name key1
:kind :positional
:type {:type "K"
:is-param true}} {:name key2
:kind :positional
:type {:type "K"
:is-param true}}]}} {:name isValidKey
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name potentialKey
:kind :positional
:type {:type "dynamic"}}]}}]}
"from" {:kind :constructor
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "dynamic"} {:type "dynamic"}]}} {:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name key1
:kind :positional
:type {:type "K"
:is-param true}} {:name key2
:kind :positional
:type {:type "K"
:is-param true}}]}} {:name isValidKey
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name potentialKey
:kind :positional
:type {:type "dynamic"}}]}}]}
"of" {:kind :constructor
:parameters [{:name other
:kind :positional
:type {:type "Map"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true} {:type "V"
:is-param true}]}} {:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name key1
:kind :positional
:type {:type "K"
:is-param true}} {:name key2
:kind :positional
:type {:type "K"
:is-param true}}]}} {:name isValidKey
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name potentialKey
:kind :positional
:type {:type "dynamic"}}]}}]}
"fromIterable" {:kind :constructor
:parameters [{:name iterable
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name key
:kind :named
:type {:type "Function"
:return-type {:type "K"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "dynamic"}}]}} {:name value
:kind :named
:type {:type "Function"
:return-type {:type "V"
:is-param true}
:parameters [{:name element
:kind :positional
:type {:type "dynamic"}}]}} {:name compare
:kind :named
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name key1
:kind :positional
:type {:type "K"
:is-param true}} {:name key2
:kind :positional
:type {:type "K"
:is-param true}}]}} {:name isValidKey
:kind :named
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name potentialKey
:kind :positional
:type {:type "dynamic"}}]}}]}
"fromIterables" {:kind :constructor
:parameters [{:name keys
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true}]}} {:name values
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "V"
:is-param true}]}} {:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name key1
:kind :positional
:type {:type "K"
:is-param true}} {:name key2
:kind :positional
:type {:type "K"
:is-param true}}]}} {:name isValidKey
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name potentialKey
:kind :positional
:type {:type "dynamic"}}]}}]}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"keys" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "K"
:is-param true}]}}
"values" {:kind :field
:getter true
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "V"
:is-param true}]}}}
"SplayTreeSet"
{:kind :class
:type-parameters [{:name "E"}]
:super {:type "_SplayTree"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true} {:type "_SplayTreeSetNode"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}]}
:mixins [{:type "IterableMixin"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]} {:type "SetMixin"
:lib "dart:collection"
:type-parameters [{:type "E"
:is-param true}]}]
"cast" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "R"
:is-param true}]}
:type-parameters [{:name "R"}]}
"contains" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"add" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name element
:kind :positional
:type {:type "E"
:is-param true}}]}
"remove" {:kind :method
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"addAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"removeAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"retainAll" {:kind :method
:return-type {:type "void"}
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"lookup" {:kind :method
:return-type {:type "E"
:nullable true
:is-param true}
:parameters [{:name object
:kind :positional
:type {:type "Object"
:nullable true
:lib "dart:core"}}]}
"intersection" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"difference" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "Object"
:nullable true
:lib "dart:core"}]}}]}
"union" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}
:parameters [{:name other
:kind :positional
:type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}]}
"clear" {:kind :method
:return-type {:type "void"}}
"toSet" {:kind :method
:return-type {:type "Set"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"toString" {:kind :method
:return-type {:type "String"
:lib "dart:core"}}
"" {:kind :constructor
:parameters [{:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name key1
:kind :positional
:type {:type "E"
:is-param true}} {:name key2
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name isValidKey
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name potentialKey
:kind :positional
:type {:type "dynamic"}}]}}]}
"from" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "dynamic"}]}} {:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name key1
:kind :positional
:type {:type "E"
:is-param true}} {:name key2
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name isValidKey
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name potentialKey
:kind :positional
:type {:type "dynamic"}}]}}]}
"of" {:kind :constructor
:parameters [{:name elements
:kind :positional
:type {:type "Iterable"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}} {:name compare
:kind :positional
:type {:type "Function"
:return-type {:type "int"
:lib "dart:core"}
:parameters [{:name key1
:kind :positional
:type {:type "E"
:is-param true}} {:name key2
:kind :positional
:type {:type "E"
:is-param true}}]}} {:name isValidKey
:kind :positional
:type {:type "Function"
:return-type {:type "bool"
:lib "dart:core"}
:parameters [{:name potentialKey
:kind :positional
:type {:type "dynamic"}}]}}]}
"iterator" {:kind :field
:getter true
:type {:type "Iterator"
:lib "dart:core"
:type-parameters [{:type "E"
:is-param true}]}}
"length" {:kind :field
:getter true
:type {:type "int"
:lib "dart:core"}}
"isEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"isNotEmpty" {:kind :field
:getter true
:type {:type "bool"
:lib "dart:core"}}
"first" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"last" {:kind :field
:getter true
:type {:type "E"
:is-param true}}
"single" {:kind :field
:getter true
:type {:type "E"
:is-param true}}}
}
}
