(ns sample.fab
  "Faithful port of https://docs.flutter.dev/cookbook/effects/expandable-fab#interactive-example"
  (:require
   ["dart:io" :as dart:io]
   ["dart:typed_data" :as dart:typed_data]
   ["dart:ffi" :as dart:ffi]
   ["package:flutter/material.dart" :as m]
   ["package:flutter/foundation.dart" :as foundation]
   ["package:flutter/cupertino.dart" :as cupertino]
   ["clipboard_manager.dart" :as clipboard]
   ["vision_bindings.dart" :as vision]
   ["package:ffi/ffi.dart" :as package:ffi]
   ["package:flutter/painting.dart" :as painting]
   ["dart:math" :as math]
   ["package:jni/jni.dart" :as jni]
   [cljd.flutter :as f]))


;; Android helpers
(defmacro with-release
  [bindings & body]
  (cond
    (= (count bindings) 0) `(do ~@body)
    (symbol? (bindings 0)) `(let ~(subvec bindings 0 2)
                              (try
                                (with-release ~(subvec bindings 2) ~@body)
                                (finally
                                  (.release ~(bindings 0)))))
    :else (throw (Exception. "with-release only allows Symbols in bindings"))))

(defn ^jni/JString java-string
  {:inline (fn [x] `(jni/JString.fromString ~x))
   :inline-arities #{1}}
  [dart-string]
  (jni/JString.fromString dart-string))

(defn ^#/(jni/JArray jni/JString) java-string-array
  [strings]
  (let [n (count strings)]
    (doto (#/(jni/JArray jni/JString) (jni/JStringType) n)
      (-> #/(jni/ObjectArray jni/JString) (.setRange 0 n (map java-string strings))))))

(defn ^#/(jni/JArray jni/jbyte) java-byte-array
  [^dart:typed_data/Uint8List bytes]
  (let [n (.-length bytes)]
    (doto (#/(jni/JArray jni/jbyte) (jni/jbyteType) n)
      (-> jni/ByteArray (.setRange 0 n bytes)))))

(defn ^clipboard/ClipboardManager cb-manager []
  (with-release [activity (clipboard/Activity.fromRef (jni/Jni.getCurrentActivity))]
    (-> activity
      (.getSystemService (java-string clipboard/Context.CLIPBOARD_SERVICE))
      (. #/(castTo clipboard/ClipboardManager)
        clipboard/ClipboardManager.type
        .releaseOriginal true))))

(defn ^Future load-image [^dart:io/HttpClient client ^Uri uri]
  (let [request (await (.getUrl client uri))
        response (await (.close request))]
    (if-not (= (.-statusCode response) dart:io/HttpStatus.ok)
      (do (. response #/(drain (List int)) #dart ^int [])
          (throw (painting/NetworkImageLoadException
                   .statusCode (.-statusCode response)
                   .uri uri)))
      (let [bytes (await (foundation/consolidateHttpClientResponseBytes response))]
        (when (zero? (.-lengthInBytes bytes))
          (throw (Exception (str "NetworkImage is an empty file: " uri))))
        bytes))))

(defn main []
  (jni/Jni.initDLApi)
  (f/run
    m/MaterialApp
    .home
    m/Scaffold
    .body
    m/Center
    (m/Column)
    .children
    [(f/widget
       (m/TextButton .onPressed (fn []))
       (m/Text "heyyy"))
     (f/widget
       :let [src "https://www.newsdle.com/img/blog/2022/10/qKhvhTV41EUgoYZPp6dQ34rBfLuy1b.jpg"]
       :managed [client (dart:io/HttpClient) :dispose .close]
       :watch [bytes (load-image client (Uri.parse src))]
       (if bytes
         (f/widget
           (cupertino/CupertinoContextMenu
             .actions [(f/widget
                         :context ctx
                         (cupertino/CupertinoContextMenuAction
                           .onPressed
                           (fn []
                             (m/Navigator.pop ctx)
                             (let [recognizer
                                   (vision/TextRecognition.getClient vision/TextRecognizerOptions.DEFAULT_OPTIONS)
                                   bitmap (vision/BitmapFactory.decodeByteArray1
                                            (java-byte-array bytes)
                                            0
                                            (.-length ^dart:typed_data/Uint8List bytes))
                                   input-image (vision/InputImage.fromBitmap bitmap 0)
                                   task (.process recognizer input-image)]
                               (dart:core/print "AFTER PROCESSSSS")
                               ;;(dart:core/print task)
                               (.close recognizer)))
                           .isDefaultAction true,
                           .trailingIcon cupertino/CupertinoIcons.doc_on_clipboard_fill,
                           .child (m/Text "Copy image")))]
             .enableHapticFeedback true)
           (m/Image.memory bytes .semanticLabel "heyllo world"))
         (m/SizedBox.shrink)))]))
